[
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "D | 1 | dinner| 22/12/2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "D | 1 | run at stadium| 11/11/2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "D | 1 | go gym| 31/12/2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "E | 1 | convention| 15/11/2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "T | 1 | cook lunch"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "E | 0 | print documents| 15/11/2020"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "E | 1 | do something| 16/11/2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "E | 0 | monthly meeting| 8/12/2020"
      }
    ],
    "authorContributionMap": {
      "erictongg": 8
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.ui.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.storage.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variables of Duke Class*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Constructor of Duke class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param filepath file path"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Duke(String filepath){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        storage  \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        storage.load(tasks, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Initialize Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //Duke header"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nHello from\\n\" + logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        duke_says(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            ui.reader(tasks, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Message printed by Duke which include top and bottom line"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param message to be printed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public static void duke_says(String message){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }//end duke_says"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Main function"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }//end main"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 54,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/command/IllegalInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class IllegalInputException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //for todo, event and deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 5
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.ui.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variable of Storage class*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private String pathname;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Constructor of Storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param path given path of the Storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Storage(String path){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.pathname \u003d path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Load saved .txt file details Duke\u0027s TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param new_list TaskList variable of Duke class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param ui Reader variable of Duke class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void load(TaskList new_list, UI ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        File f \u003d new File(pathname);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                String line_item \u003d s.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                String[] split_line_item \u003d line_item.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                switch (split_line_item[0].trim()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        line_item \u003d \"todo \" + split_line_item[2].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        line_item \u003d \"deadline \" + split_line_item[2].trim() + \"/by \" + split_line_item[3].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        line_item \u003d \"event \" + split_line_item[2].trim() + \"/at \" + split_line_item[3].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                ui.responses(new_list, line_item);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                if (split_line_item[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    ui.responses(new_list, \"done \" + counter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch (FileNotFoundException e) {}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Save latest TaskList into .txt file of given path"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param cur_list Latest Duke\u0027s TaskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void save(TaskList cur_list){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        File taskFile \u003d new File(pathname);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(taskFile.exists() \u003d\u003d false){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                saveList(cur_list);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            catch(IOException e){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                saveList(cur_list);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            catch(IOException e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"Error writing to file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Write all items of TaskList into .txt file into the path"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param cur_list Latest Duke\u0027s TaskList"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @throws IOException if there is error writing to file"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private void saveList(TaskList cur_list) throws IOException{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        FileWriter fw \u003d new FileWriter(pathname);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d cur_list.getItem_count() ; i++){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            fw.write(cur_list.convert_lineItem(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 98
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variables of task parent class*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    protected String Description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    protected Boolean Completed;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Constructor of task parent class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param desc Description of task parent class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Task(String desc){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.Description \u003d desc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        Completed \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void updateDesc(String new_entry){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.Description \u003d new_entry;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Return description variable task parent class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Description of task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getDesc(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.Description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Return completion status of task parent class"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return completion status of task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Boolean getStatus(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.Completed;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Mark a task\u0027s completion status as true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void mark_completed(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.Completed \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Abstract class of task parent class*/"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public abstract char getCat();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public abstract String getTime();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public abstract void updateTime(String new_date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public abstract void incrementTime(int days);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 55
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.command.IllegalInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variables of TaskList class*/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public ArrayList\u003cTask\u003e List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private static int item_count \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Constructor of TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.List \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //getters"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Method declared to include a top and bottom line for messaage printed by duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Will be used by other methods"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param message Message to be printed by duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void duke_echo(String message){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Return amount of items in the TaskList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Amount of items in the TaskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public int getItem_count(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.item_count;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Print all items within the TaskList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void printList(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(this.List.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"List is empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//if end"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        recurring_checker();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d item_count ; i++){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String tick \u003d (this.List.get(i - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String to_print \u003d \"[\" + this.List.get(i - 1).getCat() + \"]\" + \"[\" + tick + \"] \" + this.List.get(i - 1).getDesc();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.print(\"\\t\" + i + \". \" + to_print);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(this.List.get(i - 1).getCat() !\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                String print_line \u003d (this.List.get(i - 1).getCat() \u003d\u003d \u0027D\u0027) ? \"(by: \" : \"(at: \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                print_line \u003d print_line + this.List.get(i - 1).getTime() + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.print(print_line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Print item of the given index number"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param index of the Task to be printed"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private void print_task(int index){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String tick \u003d (this.List.get(index - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String to_print \u003d \"\\t[\" + this.List.get(index - 1).getCat() + \"]\" + \"[\" + tick + \"] \" + this.List.get(index - 1).getDesc();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(this.List.get(index - 1).getCat() !\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String print_line \u003d (this.List.get(index - 1).getCat() \u003d\u003d \u0027D\u0027) ? \"(by: \" : \"(at \";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            to_print +\u003d (print_line + this.List.get(index - 1).getTime() + \")\" );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(to_print);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Processing of task details to be saved into .txt file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param index of the Task details to be processed"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return processed string of the Task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String convert_lineItem(int index){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String status \u003d (this.List.get(index - 1).getStatus())? \"1\" : \"0\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String item_line \u003d this.List.get(index - 1).getCat() + \" | \" + status + \" | \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                + this.List.get(index - 1).getDesc();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(this.List.get(index - 1).getCat() !\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            item_line +\u003d (\"| \" + this.List.get(index - 1).getTime());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return item_line;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void find(String input){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String keyword \u003d input.split(\" \", 2)[1].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        ArrayList\u003cInteger\u003e match \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d this.getItem_count() ; i++){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(this.List.get(i - 1).getDesc().contains(keyword)){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                match.add(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(match.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"No match found!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c match.size() ; i++){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String tick \u003d (this.List.get(match.get(i) - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String to_print \u003d \"[\" + this.List.get(match.get(i) - 1).getCat() + \"]\" + \"[\" + tick + \"] \" + this.List.get(match.get(i) - 1).getDesc();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.print(\"\\t\" + (i + 1) + \". \" + to_print);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(this.List.get(match.get(i) - 1).getCat() !\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                String print_line \u003d (this.List.get(match.get(i) - 1).getCat() \u003d\u003d \u0027D\u0027) ? \"(by: \" : \"(at: \";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                print_line \u003d print_line + this.List.get(match.get(i) - 1).getTime() + \")\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.print(print_line);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void update(String input){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] input_split \u003d input.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        int index \u003d Integer.parseInt(input_split[1].trim());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(input.contains(\"desc\")){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.List.get(index - 1).updateDesc(input_split[3].trim());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.print(\"\\tGot it. I\u0027ve updated this task:\\n\\t\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            print_task(index);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(input.contains(\"date\")){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.List.get(index - 1).updateTime(input_split[3].trim());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(this.List.get(index).getCat() \u003d\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                duke_echo(\"todo do not have date/time!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.print(\"\\tGot it. I\u0027ve updated this task:\\n\\t\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                print_task(index);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"Incorrect input. Follow this syntax for update: update \u003cindex\u003e \u003cdesc/date\u003e \u003cnew entry\u003e\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //setters"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Insertion of a task into TaskList"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param input User input from UI class"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void insert_item(String input){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] task_split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] time_split;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(task_split[0].equals(\"deadline\") || task_split[0].equals(\"event\")){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            time_split \u003d task_split[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            time_split \u003d time_split[1].split(\" \", 2);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String[] date_split \u003d time_split[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            LocalDate input_date \u003d LocalDate.of(Integer.parseInt(date_split[2]), Integer.parseInt(date_split[1]), Integer.parseInt(date_split[0]));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if (input_date.compareTo(LocalDate.now()) \u003c 0){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                duke_echo(\"Task date shall not be in the past!\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        switch(task_split[0]){"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                List.add(new todo(task_split[1]));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                time_split \u003d task_split[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                List.add(new deadline(time_split[0], time_split[1].trim()));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                time_split \u003d task_split[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                List.add(new event(time_split[0], time_split[1].trim()));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end switch"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        item_count++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.print(\"\\tGot it. I\u0027ve added this task:\\n\\t\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        print_task(item_count);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tNow you have \" + item_count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Removal of task of given index in the TaskList"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param input User input from UI class that contains \"delete\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @throws IndexOutOfBoundsException if index given is out of range"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void delete(String input) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] input_split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        int index \u003d Integer.parseInt(input_split[1]);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(index \u003e item_count || index \u003c\u003d 0){"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        item_count--;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.print(\"\\tNoted. I\u0027ve removed this task:\\n\\t\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        print_task(index);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tNow you have \" + item_count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.List.remove(index-1);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *Mark task of the given index in the TaskList as completed"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param input User input from UI class that contains \"done\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void mark_completion(String input){"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        /*Remove any unwanted characters that are not int*/"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String number \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c number.length() ; i++){"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(number.charAt(i) \u003c 48 || number.charAt(i) \u003e 57){"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                number \u003d number.substring(0, i);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }//end if"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end for loop"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        int index \u003d Integer.parseInt(number); //convert to int"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        /*Check if number is within bound*/"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(index \u003e item_count || index \u003c\u003d 0){"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"There are only \" + item_count + \" items or the value is out of bound!\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(this.List.get(index - 1).getStatus()){"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"\\\"\" + this.List.get(index - 1).getDesc() + \"\\\" was already marked as done\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.List.get(index - 1).mark_completed();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String tick \u003d (this.List.get(index - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"Nice! I\u0027ve marked this task as done:\\n\\t[\" + this.List.get(index - 1).getCat() + \"]\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    + \"[\" + tick + \"] \" + this.List.get(index - 1).getDesc());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Mark all task in the TaskList as completed"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void mark_all_complete(){"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(item_count \u003d\u003d 0){"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"The list is empty!\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c item_count ; i++){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.List.get(i).mark_completed();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        duke_echo(\"All tasks(\" + item_count + \") are marked as done\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private void recurring_task(int index){"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] freq_list \u003d {\"daily\", \"weekly\", \"monthly\"};"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c freq_list.length ; i++){"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(!this.List.get(index).getDesc().contains(freq_list[i])){"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            int date_diff \u003d this.List.get(index).getDate().compareTo(LocalDate.now());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(date_diff \u003e 0){"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"Increment of date will occur\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            switch (freq_list[i]){"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                case \"daily\":"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    this.List.get(index).incrementTime(1);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                case \"weekly\":"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    this.List.get(index).incrementTime(7);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                case \"monthly\":"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    this.List.get(index).incrementTime(30);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }//end case"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end for loop"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private void recurring_checker(){"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c item_count ; i++){"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(this.List.get(i).getCat() !\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                recurring_task(i);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 296
    }
  },
  {
    "path": "src/main/java/duke/task/deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class deadline extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variables of deadline class*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private char category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *Constructor of deadline class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param desc Description of deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param timing Completion time of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public deadline(String desc, String timing){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] time_input \u003d timing.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.category \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //date processing"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(time_input[1].contains(\" \")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            time_input[1] \u003d time_input[1].substring(0, time_input[1].indexOf(\" \"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String timeParse[] \u003d time_input[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        date \u003d LocalDate.of(Integer.parseInt(timeParse[2]), Integer.parseInt(timeParse[1]), Integer.parseInt(timeParse[0]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //System.out.println(\"Year: \" + date.getYear() + \" Month: \" + date.getMonthValue() + \" Day: \" + date.getDayOfMonth());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void updateTime(String new_date){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] timeParse \u003d new_date.split(\"/\", 3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.date \u003d LocalDate.of(Integer.parseInt(timeParse[2]), Integer.parseInt(timeParse[1]), Integer.parseInt(timeParse[0]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *Return completion time of a deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Completion time of deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return date.getDayOfMonth() + \"/\" +  date.getMonthValue() + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Return category of the class"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Category"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public char getCat(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void incrementTime(int days){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(days \u003d\u003d 30){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.date \u003d this.date.plusMonths(1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.date \u003d this.date.plusDays(days);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 61
    }
  },
  {
    "path": "src/main/java/duke/task/event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variables of event class*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private char category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *Constructor of event class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param desc Description of deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param timing Completion time of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public event(String desc, String timing){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] time_input \u003d timing.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.category \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //date processing"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(time_input[1].contains(\" \")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            time_input[1] \u003d time_input[1].substring(0, time_input[1].indexOf(\" \"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String timeParse[] \u003d time_input[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        date \u003d LocalDate.of(Integer.parseInt(timeParse[2]), Integer.parseInt(timeParse[1]), Integer.parseInt(timeParse[0]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //System.out.println(\"Year: \" + date.getYear() + \" Month: \" + date.getMonthValue() + \" Day: \" + date.getDayOfMonth());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void updateTime(String new_date){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] timeParse \u003d new_date.split(\"/\", 3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.date \u003d LocalDate.of(Integer.parseInt(timeParse[2]), Integer.parseInt(timeParse[1]), Integer.parseInt(timeParse[0]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *Return completion time of a event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Completion time of event"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return date.getDayOfMonth() + \"/\" +  date.getMonthValue() + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Return category of the class"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Category"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public char getCat(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void incrementTime(int days){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(days \u003d\u003d 30){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.date \u003d this.date.plusMonths(1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.date \u003d this.date.plusDays(days);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 60
    }
  },
  {
    "path": "src/main/java/duke/task/todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class todo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**Variables of todo class*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private char category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Constructor of todo class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param desc Description of todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public todo(String desc){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.category \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void updateTime(String new_date){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Return category of the class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return Category"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public char getCat(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *Return empty string as todo have to time of completion"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @return empty string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void incrementTime(int days){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    };"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 47
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.storage.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Read input from user and process. Error processing will be handle in this method"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param tasks Duke\u0027s TaskList variable"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param storage Duke\u0027s Storage variable"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void reader(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //process user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String user_input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        user_input \u003d input.nextLine().trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //deal with inputs"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            responses(tasks, storage, user_input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(IllegalInputException e){ //unknown input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(ArrayIndexOutOfBoundsException e){ //todo, event \u0026 deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of \" + user_input.trim() + \" is invalid.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.print(\"Follow the correct syntax below:\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    \"\\ttodo \u003cdescription\u003e\\n\"+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    \"\\tdeadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    \"\\tevent \u003cdescription\u003e /at \u003cDD/MM/YYYY\u003e\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    \"\\tupdate \u003cindex\u003e \u003cdesc/date\u003e \u003cnew entry\u003e\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(NumberFormatException e){ //done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + user_input.trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Delete is out of bound. \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(DateTimeException e){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Date format is incorrect or is in the past. \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * Direct input from user into the correct method"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param tasks Duke\u0027s TaskList variable"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param storage Duke\u0027s Storage variable"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param user_input Input from end-user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @throws IllegalInputException if input is invalid"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void responses(TaskList tasks, Storage storage, String user_input) throws IllegalInputException{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(user_input.equals(\"bye\")){ //bye: end duke"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            //save list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            //end duke"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.duke_echo(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end if"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.equals(\"list\")){ //list: list items"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.printList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else if"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.contains(\"done\")){ //done: change done to true from false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(user_input.equals(\"done all\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                tasks.mark_all_complete();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.mark_completion(user_input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if((user_input.contains(\"todo\") || user_input.contains(\"deadline\") || user_input.contains(\"event\"))){ //insertion of item into list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.insert_item(user_input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else if"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.contains(\"delete\")){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.delete(user_input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.contains(\"find\")){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.find(user_input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.contains(\"update\")){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.update(user_input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            throw new IllegalInputException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * This method is used for loading of task from.txt file"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param tasks TaskList"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     * @param user_input Processed input from Storage class"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erictongg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void responses(TaskList tasks, String user_input){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(user_input.contains(\"done\")){ //done: change done to true from false"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(user_input.equals(\"done all\")){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                tasks.mark_all_complete();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.mark_completion(user_input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if((user_input.contains(\"todo\") || user_input.contains(\"deadline\") || user_input.contains(\"event\"))){ //insertion of item into list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.insert_item(user_input);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else if"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 108
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    TaskList test \u003d createTaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public TaskList createTaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        tasks.insert_item(\"todo homework\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        tasks.insert_item(\"deadline buy lunch /by 5/11/2020\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        tasks.insert_item(\"event fireworks /at 11/11/2020\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //test item count and delete"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        assertEquals(3, test.getItem_count());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        while(test.getItem_count() \u003e 0){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            test.delete(\"delete 1\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        assertEquals(0, test.getItem_count());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "erictongg": 28
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Task[] createTask(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        Task[] list \u003d new Task[3];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        list[0] \u003d new todo(\"dinner\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        list[1] \u003d new deadline(\"homework\", \"by 10/11/2020\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        list[2] \u003d new event(\"fireworks\", \"at 11/11/2020\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    Task[] testList \u003d createTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /*Category test*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void todoTest(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        assertEquals(testList[0].getCat(), \u0027T\u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void deadlineTest(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        assertEquals(testList[1].getCat(), \u0027D\u0027);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void eventTest(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        assertEquals(testList[2].getCat(), \u0027E\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void dateTest(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] dateCheck \u003d {\"\", \"10/11/2020\", \"11/11/2020\"};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d 3 ; i++){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            assertEquals(testList[i - 1].getTime(), dateCheck[i - 1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void completionTest(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d 3 ; i++){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            assertEquals(testList[i - 1].getStatus(), false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            testList[i - 1].mark_completed();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d 3 ; i++){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            assertEquals(testList[i - 1].getStatus(), true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 47
    }
  }
]
