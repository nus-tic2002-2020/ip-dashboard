[
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "D | 1 | Communication Proposal /by 26 Oct 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "T | 1 | Complete Duke level 7"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "T | 0 | Math tutorials"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "T | 0 | buy groceries"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "T | 0 | exercise"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "E | 0 | meeting /at 1 Nov 2020"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "D | 0 | finish working paper /by 9am"
      }
    ],
    "authorContributionMap": {
      "erictongg": 7
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //variables"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Duke(String filepath){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        storage  \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        storage.load(tasks, ui);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //accessors"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //Duke header"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nHello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        duke_says(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            ui.reader(tasks, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public static void duke_says(String message){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }//end duke_says"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }//end main"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 31,
      "-": 8
    }
  },
  {
    "path": "src/main/java/IllegalInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class IllegalInputException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //for todo, event and deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 3
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //variable"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private String pathname;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Storage(String path){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.pathname \u003d path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //accessor and modifier"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void load(TaskList new_list, UI ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        File f \u003d new File(pathname);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                String line_item \u003d s.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                String[] split_line_item \u003d line_item.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                switch (split_line_item[0].trim()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        line_item \u003d \"todo \" + split_line_item[2].trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        line_item \u003d \"deadline \" + split_line_item[2].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        line_item \u003d \"event \" + split_line_item[2].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                ui.responses(new_list, line_item);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                //new_list.reader(line_item);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                if (split_line_item[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    ui.responses(new_list, \"done \" + counter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    //new_list.reader(\"done \" + counter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch (FileNotFoundException e) {}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void save(TaskList cur_list){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        File taskFile \u003d new File(pathname);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(taskFile.exists() \u003d\u003d false){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                saveList(cur_list);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            catch(IOException e){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                saveList(cur_list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            catch(IOException e){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                System.out.println(\"Error writing to file\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private void saveList(TaskList cur_list) throws IOException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        FileWriter fw \u003d new FileWriter(pathname);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d cur_list.getItem_count() ; i++){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            fw.write(cur_list.convert_lineItem(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 72
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    protected String Description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    protected Boolean Completed;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Task(String desc){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.Description \u003d desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        Completed \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getDesc(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.Description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public Boolean getStatus(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.Completed;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public abstract char getCat();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void mark_completed(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.Completed \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 19
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //variable"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public ArrayList\u003cTask\u003e List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private static int item_count \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.List \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //getters"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void duke_echo(String message){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public int getItem_count(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.item_count;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void printList(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(this.List.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"List is empty\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//if end"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 1 ; i \u003c\u003d item_count ; i++){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String tick \u003d (this.List.get(i - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String to_print \u003d \"[\" + this.List.get(i - 1).getCat() + \"]\" + \"[\" + tick + \"] \" + this.List.get(i - 1).getDesc();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"\\t\" + i + \". \" + to_print);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private void print_task(int index){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String tick \u003d (this.List.get(index - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String to_print \u003d \"\\t[\" + this.List.get(index - 1).getCat() + \"]\" + \"[\" + tick + \"] \" + this.List.get(index - 1).getDesc();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(to_print);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String convert_lineItem(int index){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String status \u003d (this.List.get(index - 1).getStatus())? \"1\" : \"0\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String item_line \u003d this.List.get(index - 1).getCat() + \" | \" + status + \" | \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                + this.List.get(index - 1).getDesc();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return item_line;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //setters"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void insert_item(String input){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] task_split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        switch(task_split[0]){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                List.add(new todo(task_split[1]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                List.add(new deadline(task_split[1], \"TBC\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                List.add(new event(task_split[1], \"TBC\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end switch"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        item_count++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.print(\"\\tGot it. I\u0027ve added this task:\\n\\t\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        print_task(item_count);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tNow you have \" + item_count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void delete(String input) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String[] input_split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        int index \u003d Integer.parseInt(input_split[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(index \u003e item_count || index \u003c\u003d 0){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        item_count--;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.print(\"\\tNoted. I\u0027ve removed this task:\\n\\t\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        print_task(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\tNow you have \" + item_count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.List.remove(index-1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void mark_completion(String done_message){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        /*Remove any unwanted characters that are not int*/"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String number \u003d done_message.substring(done_message.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c number.length() ; i++){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(number.charAt(i) \u003c 48 || number.charAt(i) \u003e 57){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                number \u003d number.substring(0, i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }//end if"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end for loop"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        int index \u003d Integer.parseInt(number); //convert to int"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        /*Check if number is within bound*/"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(index \u003e item_count || index \u003c\u003d 0){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"There are only \" + item_count + \" items or the value is out of bound!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //else if(this.done.get(index - 1) \u003d\u003d true){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(this.List.get(index - 1).getStatus()){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"\\\"\" + this.List.get(index - 1).getDesc() + \"\\\" was already marked as done\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            //this.done.set(index - 1, true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.List.get(index - 1).mark_completed();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            String tick \u003d (this.List.get(index - 1).getStatus()) ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"Nice! I\u0027ve marked this task as done:\\n\\t[\" + this.List.get(index - 1).getCat() + \"]\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                    + \"[\" + tick + \"] \" + this.List.get(index - 1).getDesc());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void mark_all_complete(){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(item_count \u003d\u003d 0){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            duke_echo(\"The list is empty!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        for(int i \u003d 0 ; i \u003c item_count ; i++){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            this.List.get(i).mark_completed();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            //this.done.set(i, true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        duke_echo(\"All tasks(\" + item_count + \") are marked as done\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 121
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    //accessor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /*for handling user input*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void reader(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //process user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        String user_input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        user_input \u003d input.nextLine().trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        //deal with inputs"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            responses(tasks, storage, user_input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(IllegalInputException e){ //unknown input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(ArrayIndexOutOfBoundsException e){ //todo, event \u0026 deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + user_input.trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(NumberFormatException e){ //done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + user_input.trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Delete is out of bound. \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void responses(TaskList tasks, Storage storage, String user_input) throws IllegalInputException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(user_input.equals(\"bye\")){ //bye: end duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            //save list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            //end duke"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.duke_echo(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end if"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.equals(\"list\")){ //list: list items"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.printList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else if"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.contains(\"done\") /*\u0026\u0026 (user_input.equals(\"done\") \u003d\u003d false)*/){ //done: change done to true from false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(user_input.equals(\"done all\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                tasks.mark_all_complete();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.mark_completion(user_input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if((user_input.contains(\"todo\") || user_input.contains(\"deadline\") || user_input.contains(\"event\"))){ //insertion of item into list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.insert_item(user_input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else if"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if(user_input.contains(\"delete\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.delete(user_input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            throw new IllegalInputException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    /*for loading previously saved list*/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public void responses(TaskList tasks, String user_input){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        if(user_input.contains(\"done\") /*\u0026\u0026 (user_input.equals(\"done\") \u003d\u003d false)*/){ //done: change done to true from false"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            if(user_input.equals(\"done all\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                tasks.mark_all_complete();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erictongg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.mark_completion(user_input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        else if((user_input.contains(\"todo\") || user_input.contains(\"deadline\") || user_input.contains(\"event\"))){ //insertion of item into list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erictongg"
        },
        "content": "            tasks.insert_item(user_input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        }//end else if"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 70
    }
  },
  {
    "path": "src/main/java/deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private char category;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public deadline(String desc, String timing){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.time \u003d timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.category \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public char getCat(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 16
    }
  },
  {
    "path": "src/main/java/event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private char category;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public event(String desc, String timing){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.time \u003d timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.category \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public char getCat(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 16
    }
  },
  {
    "path": "src/main/java/todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erictongg"
        },
        "content": "public class todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    private char category;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erictongg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public todo(String desc){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        this.category \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    public char getCat(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erictongg"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erictongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erictongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erictongg": 11
    }
  }
]
