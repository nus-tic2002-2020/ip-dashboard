[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "deadline return book /by 2020-01-01 1300"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "event tgterer /by 2019-04-04 0800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "deadline return book2 /by 2020-01-01 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "deadline return book2 /by 2020-01-01 1401"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.BadLocationException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.MissDescException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import ui.Chat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import ui.GUI;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import ui.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * This is my TIC2201 homework project. It is a personal task manager that you"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * can arrange and store your personal schedule. It recognizes commands by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * reading your input. Schedule types: \u0027deadline\u0027, \u0027todo\u0027, \u0027event\u0027. To exit and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * save program, type \u0027bye\u0027."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * @author SilvermistVV"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * @since August 2020"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.main(null);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tnew java.util.Timer().schedule(new java.util.TimerTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tpublic void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tStorage.main();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tChat.main();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t} catch (DukeException | BadLocationException | IOException | MissDescException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\t// TODO Auto-generated catch block"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}, 800);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 41
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.BadLocationException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import ui.GUI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * This exception occurs when input command was not recognized. If there is no"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * message, the default message will pop out."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic DukeException(String msg) throws DukeException, BadLocationException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (msg \u003d\u003d \"\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tmsg \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutputWarning(msg);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 21
    }
  },
  {
    "path": "src/main/java/exceptions/MissDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.BadLocationException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import ui.GUI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class MissDescException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t *  This exception is used to check missing descriptions from message given from _userinput[1]."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic MissDescException(String msg) throws DukeException, BadLocationException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput (\"OOPS!!! The description of a \"+msg+\" cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 17
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * Task type: Deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected int time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic Deadline(String description, LocalDate date, int time, String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tsuper(description, userInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic String printTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn \"[D]\" + \"[\" + getIcon() + \"] \" + getTitle() + \" (by: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t+ date.format(DateTimeFormatter.ofPattern(\"MMM/dd/yyyy\")) + \" \" + time + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 27
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * Task type: Event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected int time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic Event(String description, LocalDate date, int time, String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tsuper(description, userInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic String printTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn \"[E]\" + \"[\" + getIcon() + \"] \" + getTitle() + \" (at: \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t+ date.format(DateTimeFormatter.ofPattern(\"MMM/dd/yyyy\")) + \" \" + time + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 28
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * This is the mother class for all task types. It is also the default class for"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * type \u0027todo\u0027."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected String title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected String userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic Task(String title, String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.userInput \u003d userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic String getTitle() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn this.title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic String getUserInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn this.userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic LocalDate getDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic int getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic String getIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn (isDone ? \"Done\" : \"X\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic String printTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn \"[T]\" + \"[\" + getIcon() + \"] \" + getTitle();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 49
    }
  },
  {
    "path": "src/main/java/test/UnitTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//import ui.Chat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//public class UnitTest extends Chat{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//    public void testFact(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//    \tassertEquals(Chat.count,Chat.task.size());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//    \tassertTrue(Chat.count\u003e0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 17
    }
  },
  {
    "path": "src/main/java/ui/Chat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.BadLocationException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.MissDescException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * This is the major class. It initializes chat, read commands and process"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " * storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class Chat extends Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected static ArrayList\u003cTask\u003e task \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected static int count \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected static int TIME_NULL\u003d0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprotected static boolean isOngoing \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate enum ServiceType{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbye,list,find,done,delete,todo,event,deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @param going decides whether Duke will still scan user input. If user says"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t *              \u0027bye\u0027 then, bye."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws MissDescException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws BadLocationException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void main() throws DukeException, BadLocationException, IOException, MissDescException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput(\"Hello! I\u0027m Duke. What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void printAddedTasks(String content)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrows DukeException, BadLocationException, IOException, MissDescException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tint a \u003d count + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput(content);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput(\"Now you have \" + a + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void processChat(String userInput, boolean print)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrows DukeException, IOException, MissDescException, BadLocationException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (userInput.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrow new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tString[] userInputSplit \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tString input \u003d (userInputSplit[0]).trim().toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tString data \u003dnull;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tServiceType serviceType \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif(userInputSplit.length\u003e1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tdata \u003d userInputSplit[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tserviceType\u003d ServiceType.valueOf(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrow new DukeException(\"Sorry I cannot understand you.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tswitch (serviceType) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase bye: {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t/**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t * Only when user input bye duke will save user tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tStorage.saveFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tisOngoing \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutput(\"Current tasks are saved. Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase list: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t/**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t * Two ways: list \u0026 list+date. Example: list. Example: list 2020-01-01."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (userInputSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutput(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tlistAll();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tLocalDate d \u003d processDate(data);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tGUI.guiOutput(\"Here are the tasks in your list on \" + data + \":\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tlistAllwithDate(d);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Invalid date\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase find: {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (data \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutput(\"Input key.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\treturn;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tlistAllwithKey(data);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Invalid number\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}\t\t\t"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase done: {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tint taskID \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttaskID \u003d Integer.parseInt(data);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Invalid number\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (taskID \u003e count) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Invalid task number\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\ttask.get(taskID - 1).markDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\" Nice! I\u0027ve marked this task as done:\\n\" + task.get(taskID - 1).printTask());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase delete: {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tString[] deleteArrStr \u003d data.split(\",\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tint[] deleteArr \u003d new int[deleteArrStr.length];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tassert (deleteArrStr.length\u003ccount):\"user removing all tasks!!\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tfor(int a\u003d0;a\u003cdeleteArr.length;a++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tint taskNum \u003d 0;//delete 1,2"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\ttaskNum \u003d Integer.parseInt(deleteArrStr[a].trim());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tdeleteArr[a]\u003dtaskNum;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Sorry, I didn;t recognize this task number: \"+deleteArr[a]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tif (taskNum \u003e count) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Invalid task number\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tfor(int a\u003ddeleteArr.length-1;a\u003e\u003d0;a--) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttask.remove(deleteArr[a] - 1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tcount--;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}\t\t\t"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\"Noted. I\u0027ve removed task \"+data+\" from your list.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif(count\u003e0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutput(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tlistAll();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase event:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase deadline: {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tString[] content \u003d data.split(\"/\",2);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tString[] datetime \u003d content[1].split(\" \", 3);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tLocalDate date \u003d processDate(datetime[1]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tint time \u003d Integer.parseInt(datetime[2]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tboolean isAnomoly\u003dDetectAnomalies(date, time);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tif (!isAnomoly)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\treturn;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tswitch (serviceType) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tcase event:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\ttask.add(count, new Event(content[0].trim(), date, time, userInput));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tcase deadline:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\ttask.add(count, new Deadline(content[0].trim(), date, time, userInput));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tdefault:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\treturn;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tif (print) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tprintAddedTasks(task.get(count).printTask());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tcount++;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} catch (RuntimeException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Please input datetime in correct format. Example: 2020-01-01 1300\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcase todo: {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttask.add(count, new Task(data, userInput));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tif (print) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tprintAddedTasks(task.get(count).toString());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tcount++;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t} catch (RuntimeException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tthrow new MissDescException(input);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tdefault: {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrow new DukeException(\"Sorry I cannot understand you.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * The following three methods provides list of tasks with conditions."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws DukeException        Throws an error if the list is empty."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws MissDescException"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws IOException"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws BadLocationException"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void listAll() throws DukeException, BadLocationException, IOException, MissDescException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tint n \u003d 1;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\"There are no items currently in the list\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tfor (int a \u003d 0; a \u003c count; a++) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(n + \". \" + task.get(a).printTask());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tn++;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tassert (n\u003e1):\"no tasks are there!\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void listAllwithDate(LocalDate d)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrows DukeException, BadLocationException, IOException, MissDescException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tint n \u003d 1;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\"There are no items currently in the list\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tfor (int a \u003d 0; a \u003c count; a++) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tLocalDate date \u003d task.get(a).getDate();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (date !\u003d null \u0026\u0026 date.equals(d)) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutput(n + \". \" + task.get(a).printTask());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tn++;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (n \u003d\u003d 1)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\"Oh you dont have a task on that day\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void listAllwithKey(String keyword)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrows DukeException, BadLocationException, IOException, MissDescException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tint n \u003d 1;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\"There are no items currently in the list\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tfor (int a \u003d 0; a \u003c count; a++) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tString title \u003d task.get(a).getTitle();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (title.toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutput(n + \". \" + task.get(a).printTask());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tn++;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (n \u003d\u003d 1) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tGUI.guiOutput(\"Oh you dont have a task on that day\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static LocalDate processDate(String date) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tLocalDate d \u003d LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn d;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static boolean DetectAnomalies(LocalDate date, int time) throws DukeException, BadLocationException {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (count \u003d\u003d 0 || time \u003d\u003d TIME_NULL)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tfor (int a \u003d 0; a \u003c count; a++) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tTask t \u003d task.get(a);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (t.getTime() \u003d\u003d TIME_NULL || t.getDate() \u003d\u003d null)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\treturn true;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tif (t.getDate().isEqual(date) \u0026\u0026 t.getTime() \u003d\u003d time) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tGUI.guiOutputWarning(\"New task was not added because it corrupt with \" + t.printTask());"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 284
    }
  },
  {
    "path": "src/main/java/ui/GUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.awt.EventQueue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.MissDescException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JFrame;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JPanel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.border.EmptyBorder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JTextPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JLabel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JTextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JButton;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.JScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.awt.event.ActionListener;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.awt.event.ActionEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.awt.Font;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.awt.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.border.LineBorder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.BadLocationException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.Style;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.StyleConstants;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.StyledDocument;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.ScrollPaneConstants;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.awt.Insets;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class GUI extends JFrame {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate JPanel contentPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate JTextField txtSend;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static JTextPane txtChatRecord;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static JButton btnSend;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static StyledDocument doc;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static boolean isYourTurn \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tEventQueue.invokeLater(new Runnable() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tpublic void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tGUI frame \u003d new GUI();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tframe.setVisible(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * Create the frame."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws DukeException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic GUI() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tsetTitle(\"Duke Chatting System\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tsetDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tsetBounds(100, 100, 379, 499);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane \u003d new JPanel();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.setBackground(new Color(255, 182, 193));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.setBorder(new EmptyBorder(5, 5, 5, 5));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tsetContentPane(contentPane);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.setLayout(null);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend \u003d new JButton(\"Send\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setBorder(new LineBorder(new Color(255, 255, 255), 3, true));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setContentAreaFilled(false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setOpaque(false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setFont(new Font(\"Calibri\", Font.PLAIN, 14));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setForeground(Color.WHITE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setBackground(Color.WHITE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.addActionListener(new ActionListener() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tpublic void actionPerformed(ActionEvent arg0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tString input \u003dtxtSend.getText().trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\ttxtSend.setText(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tguiInput(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t} catch (DukeException | IOException | MissDescException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\t// TODO Auto-generated catch block"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t} catch (BadLocationException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\t// TODO Auto-generated catch block"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tbtnSend.setBounds(287, 411, 66, 39);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.add(btnSend);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtSend \u003d new JTextField();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtSend.setForeground(Color.BLUE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtSend.setBackground(new Color(255, 255, 255));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtSend.setBorder(new LineBorder(new Color(255, 240, 245), 3));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtSend.setBounds(10, 411, 270, 39);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.add(txtSend);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtSend.setColumns(10);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tJLabel lblNewLabel \u003d new JLabel(\"Chat with Duke\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tlblNewLabel.setForeground(Color.WHITE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tlblNewLabel.setFont(new Font(\"Corbel\", Font.BOLD, 21));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tlblNewLabel.setBounds(31, 10, 167, 27);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.add(lblNewLabel);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tJLabel lblNewLabel_1 \u003d new JLabel(\"\\u0E51\\u2032\\u1D17\\u2035\\u0E51\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tlblNewLabel_1.setForeground(new Color(255, 255, 255));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tlblNewLabel_1.setBounds(287, 8, 66, 34);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.add(lblNewLabel_1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tJScrollPane scrollPane \u003d new JScrollPane();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tscrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tscrollPane.setBounds(10, 47, 343, 338);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcontentPane.add(scrollPane);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtChatRecord \u003d new JTextPane();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtChatRecord.setEditable(false);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtChatRecord.setDisabledTextColor(Color.BLACK);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttxtChatRecord.setMargin(new Insets(10, 10, 10, 10));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tscrollPane.setViewportView(txtChatRecord);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tdoc \u003d txtChatRecord.getStyledDocument();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void guiInput(String input)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tthrows DukeException, IOException, MissDescException, BadLocationException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tassert (input!\u003dnull):\"blank input!\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (isYourTurn) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyle styleYou \u003d txtChatRecord.addStyle(\"\", null);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyleConstants.setForeground(styleYou, Color.blue);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyleConstants.setBold(styleYou, true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyleConstants.setAlignment(styleYou, StyleConstants.ALIGN_RIGHT);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tdoc.insertString(doc.getLength(), \"\\n\\nYou: \", styleYou);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tisYourTurn \u003d false;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tStyle style \u003d txtChatRecord.addStyle(\"\", null);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tStyleConstants.setForeground(style, Color.blue);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tStyleConstants.setAlignment(style, StyleConstants.ALIGN_RIGHT);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tdoc.insertString(doc.getLength(), input + \"\\n\", style);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tChat.processChat(input, true);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void guiOutput(String output) throws DukeException, BadLocationException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (!isYourTurn) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyle style \u003d txtChatRecord.addStyle(\"\", null);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyleConstants.setBold(style, true);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tdoc.insertString(doc.getLength(), \"\\nDuke: \", style);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tisYourTurn \u003d true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tdoc.insertString(doc.getLength(), \"\\n\" + output, null);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif(!Chat.isOngoing) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tbtnSend.setEnabled(false);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void guiOutputWarning(String output) throws DukeException, BadLocationException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (!isYourTurn) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyle styleDuke \u003d txtChatRecord.addStyle(\"\", null);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyleConstants.setForeground(styleDuke, Color.red);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tStyleConstants.setBold(styleDuke, true);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tdoc.insertString(doc.getLength(), \"\\nDuke: \", styleDuke);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tisYourTurn \u003d true;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tStyle style \u003d txtChatRecord.addStyle(\"\", null);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tStyleConstants.setForeground(style, Color.red);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tdoc.insertString(doc.getLength(), \"\\n\" + output, style);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 166
    }
  },
  {
    "path": "src/main/java/ui/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import javax.swing.text.BadLocationException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import exceptions.MissDescException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "public class Storage extends Duke{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static String path \u003d \"F:/NUS/duke_new/data/\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static String filename \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tprivate static String filePath \u003d path + filename;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void main() throws DukeException, IOException, MissDescException, BadLocationException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tcheckFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\treadFile();\t"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t* This method checks if duke.txt is there."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t* If its not there, it will create folder and file automatically."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws IOException "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t*/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void checkFile() throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tFile dir \u003d new File(path);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (dir.exists() \u003d\u003d false) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tdir.mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif (!file.exists())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tfile.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t* This method reads duke.txt, load and prints previous tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws MissDescException "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws IOException "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t * @throws BadLocationException "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t*/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void readFile() throws DukeException, IOException, MissDescException, BadLocationException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\tScanner in \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\twhile (in.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tString str\u003din.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\tif(str.length()\u003e0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t\tChat.processChat(str,false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tif(Chat.count\u003d\u003d0) return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dExisting List\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tChat.listAll();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\tGUI.guiOutput(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dExisting List\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\tpublic static void saveFile() throws Exception {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t PrintWriter prw\u003d new PrintWriter (filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t String inputs\u003d\"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t for(Task t:Chat.task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t\t inputs+\u003dt.getUserInput()+\"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t\t }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t      prw.println(inputs);          "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t      prw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0194229X"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0194229X"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0194229X": 78
    }
  }
]
