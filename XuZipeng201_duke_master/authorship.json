[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.DoWithinPeriod;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Pi is a chatbot that helps user to manage different type of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * User can add, delete, list, find, snooze and done his tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Data is saved to text file. System will prompt user if there is no file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Otherwise system will create a file to save data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * To construct Pi application."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param filePath file path that used to save data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (!(e instanceof NoSuchFileException)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.showLoadingError(\"File not found or unable to load the tasks\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                //e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Run the application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Chatbot will do different tasks based on user\u0027s input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.showLogo();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (parser.getUserCommand().equals(\"list\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.printList(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"done\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    int finishedTask \u003d parser.getTaskIndex(tasks.size());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    assert finishedTask \u003e 0 : \"Invalid number, index shall be greater than 0.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.getTask(finishedTask - 1).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printDoneMessage(tasks, finishedTask - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(exception);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    storage.updateFile(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"delete\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    int removedTask \u003d parser.getTaskIndex(tasks.size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    assert removedTask \u003e 0 : \"Invalid number, index shall be greater than 0.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printDeleteMessage(tasks, removedTask - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.deletedTask(removedTask - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printUpdateMessage(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(exception);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    storage.updateFile(tasks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"find\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    this.findTask(parser);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"snooze\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    this.snoozeTask(parser);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    //int snoozedTask \u003d parser.getTaskIndex(tasks.size());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    //tasks.snoozedTask(snoozedTask - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    //tasks.snoozePostpone(tasks.getTask(snoozedTask-1));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(exception);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    storage.updateFile(tasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    this.addTask(parser);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printUpdateMessage(tasks);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    } catch (IOException exception) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(exception);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Add different tasks to the list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param parser To get the user\u0027s input"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException To show the error message when detect the wrong input or missing input"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void addTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (parser.getUserCommand().equals(\"todo\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String toDo \u003d parser.getDescription();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.addTask(new ToDo(toDo, \"T\", false));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else if (parser.getUserCommand().equals(\"event\") || parser.getUserCommand().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate date \u003d parser.getDate();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalTime timing \u003d parser.getTime();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (parser.getUserCommand().equals(\"event\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.addTask(new Event(description, \"E\", date, timing, false));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.addTask(new Deadline(description, \"D\", date, timing, false));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else if (parser.getUserCommand().equals(\"doWithinPeriod\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate fromDate \u003d parser.getFromDate();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate toDate \u003d parser.getToDate();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.addTask(new DoWithinPeriod(description, \"P\", fromDate, toDate, false));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.printAddMessage(tasks);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Function to find the task description from user command."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param parser To interpret user input command."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Error message."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void findTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String keyword \u003d parser.getDescription();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ArrayList\u003cString\u003e targets \u003d tasks.findTargets(keyword);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.printTargets(targets);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Function to find the task by using task index number that user wants to postpone."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param parser To interpret user input command."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Error message."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void snoozeTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int snoozedTask \u003d parser.getTaskIndex(tasks.size());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        tasks.snoozedTask(snoozedTask - 1);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.snooze(tasks.snoozePostpone(tasks.getTask(snoozedTask-1)));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 210,
      "-": 4
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Exceptions for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param message error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 26
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Handle user inputs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param input User\u0027s command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return user input as command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Command of user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return inputs[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return index of specific task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param size number of tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Index of that specific task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Exception message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public int getTaskIndex(int size) throws DukeException{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (Integer.valueOf(inputs[1]) \u003e size) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! You have entered an invalid index.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return Integer.valueOf(inputs[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the task\u0027s description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Exception message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDescription() throws DukeException{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! The description of a \" + inputs[0] + \" cannot be empty!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String description \u003d inputs[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int dateIndex \u003d this.getDateIndex();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 2; i \u003c dateIndex; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            description \u003d description.concat(\" \" + inputs[i]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return index of the date based on user input (deadline/event)."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Index of date."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public int getDateIndex() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int i \u003d 2;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (i !\u003d inputs.length \u0026\u0026 inputs[i].charAt(0) !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return date of deadline or event."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Date of deadline or event."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Exception message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalDate getDate() throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int dateIndex \u003d this.getDateIndex() + 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (dateIndex \u003d\u003d (inputs.length + 1) || dateIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! Please input a timing for this task. \" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    \"Please follow the format: yyyy-mm-dd HH:mm\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(inputs[dateIndex]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return \u0027to date\u0027 of Do within the period task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return \u0027To date\u0027 of Do within the period task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Exception message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalDate getToDate() throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int dateIndex \u003d this.getDateIndex() + 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (dateIndex \u003d\u003d (inputs.length + 1) || dateIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! Please input a timing for this task. \" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    \"Please follow the format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String toDate \u003d inputs[inputs.length-1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localToDate \u003d LocalDate.parse(toDate);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return localToDate;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return \u0027from date\u0027 of Do within the period task."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return \u0027From date\u0027 of Do within the period task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Exception message."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalDate getFromDate() throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int dateIndex \u003d this.getDateIndex() + 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (dateIndex \u003d\u003d (inputs.length + 1) || dateIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! Please input a timing for this task. \" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    \"Please follow the format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String fromDate \u003d inputs[inputs.length-2];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localFromDate \u003d LocalDate.parse(fromDate);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return localFromDate;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return time of deadline/event."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Time of deadline/event."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException Exception message."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalTime getTime() throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int timeIndex \u003d this.getDateIndex() + 2;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (timeIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! Please input a timing for this task. \" +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    \"Please follow this format: HH:mm (12:30)\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalTime timing \u003d LocalTime.parse(inputs[timeIndex]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 161
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.DoWithinPeriod;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Loading tasks from text file and save tasks to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param filePath text file path to save tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath,false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            writer.write(tasks.getTask(0).formatForFile());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                writer.write(System.lineSeparator() + tasks.getTask(i).formatForFile());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * To load the saved tasks in the text file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Displays the tasks that are saved previously in the text file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws FileNotFoundException To show error message when file could not be found"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile () throws FileNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        File file \u003d new File (filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Scanner readFile \u003d new Scanner (file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String fileInput \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String inputs[] \u003d fileInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskType \u003d inputs[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String isDone \u003d inputs[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d inputs[2];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            switch (taskType){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String eventDate \u003d inputs[3];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String eventTime \u003d inputs[4];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(eventDate, formatter);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalTime localTime \u003d LocalTime.parse(eventTime, formatter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Event(description, taskType, localDate, localTime, false));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Event(description, taskType, localDate, localTime, true));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String deadlineDate \u003d inputs[3];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String deadlineTime \u003d inputs[4];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalDate deadlineLocalDate \u003d LocalDate.parse(deadlineDate, deadlineFormatter);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalTime deadlineLocalTime \u003d LocalTime.parse(deadlineTime, deadlineFormatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Deadline(description, taskType, deadlineLocalDate, deadlineLocalTime,false));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Deadline(description, taskType, deadlineLocalDate, deadlineLocalTime, true));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"P\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String fromDate \u003d inputs[3];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String toDate \u003d inputs[4];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                DateTimeFormatter fromDateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalDate fromLocalDate \u003d LocalDate.parse(fromDate, fromDateFormatter);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                DateTimeFormatter toDateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalDate toLocalDate \u003d LocalDate.parse(toDate, toDateFormatter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new DoWithinPeriod(description, taskType, fromLocalDate, toLocalDate,false));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new DoWithinPeriod(description, taskType, fromLocalDate, toLocalDate, true));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new ToDo(description, taskType, false));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new ToDo(description, taskType, true));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 132
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Deadline task has detail date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is Deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param date Deadline date."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param timing Deadline time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is Deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param date Deadline date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param timing Deadline time."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param isDone Whether task is completed or not."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the date of the deadline in the correct format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Deadline date."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the timing of the deadline in the correct format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Deadline time."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Set a new date to extend the previous date of deadline task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param newDate New set date for postponed task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void setDate(LocalDate newDate) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d newDate;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo() + \" by \" + this.getDate() + \" \" + this.getTiming();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task for storage in file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.formatForFile() + \"|\" + this.getDate() + \"|\" + this.getTiming();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 90
    }
  },
  {
    "path": "src/main/java/tasks/DoWithinPeriod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Do within the period task has a period of date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class DoWithinPeriod extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate fromDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate toDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is doWithinPeriod."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param fromDate \u0027From date\u0027 of doWithinPeriod task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param toDate \u0027To date\u0027 of doWithinPeriod task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param isDone Whether task is completed or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public DoWithinPeriod(String description, String taskType, LocalDate fromDate, LocalDate toDate, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.fromDate \u003d fromDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.toDate \u003d toDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the from date of the doWithinPeriod in the correct format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return From date of doWithinPeriod task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getFromDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the to date of the doWithinPeriod in the correct format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return To date of doWithinPeriod task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getToDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo() + \" between \" + this.getFromDate() + \" and \" + this.getToDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task for storage in file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.formatForFile() + \"|\" + this.getFromDate() + \"|\" + this.getToDate();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 64
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Event task has detail date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param date Event date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param timing Event time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param date Event date."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param timing Event time."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param isDone Whether task is completed or not."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the date of the event in the correct format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Event date."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the timing of the event in the correct format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Event time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo() + \" at \" + this.getDate() + \" \" + this.getTiming();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task for storage in file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.formatForFile() + \"|\" + this.getDate() + \"|\" + this.getTiming();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 82
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Parent class, it presents the tasks that need to be saved."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Different type of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task(String description,String taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Different type of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param isDone Task status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return a symbol to show a task status."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Return Y if task is done or X if not."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return (isDone ? \"Y\" : \"X\"); //return symbols (✓ : ✘)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return description of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Mark a task as completed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the type of a task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"[\" + this.getTaskType() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task for storage in file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return this.getTaskType() + \"|\" + this.getStatusIcon() + \"|\" + this.getDescription();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 91
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * The class contains task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private int snoozedIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks List of tasks that were previously saved in text file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return number of tasks in list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Number of tasks in list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return a specific task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskIndex Index of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return That task\u0027s index."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Remove a task from task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskIndex Index of task to be removed from list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void deletedTask(int taskIndex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Add a task to the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param task Task to be added in the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return index of the postponed task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param snoozedIndex Index of postponed task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void snoozedTask(int snoozedIndex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.snoozedIndex \u003d snoozedIndex;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Set a new date (7 days later) for postponed task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param overdueTask Overdue task in task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Return the task with reset postponed (new) date."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task snoozePostpone(Task overdueTask) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (overdueTask instanceof Deadline) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            ((Deadline)overdueTask).getDate();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String oldDateFormatted \u003d ((Deadline)overdueTask).getDate();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate oldLocalDate \u003d LocalDate.parse(oldDateFormatted, formatter);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate newLocalDate \u003d oldLocalDate.plusDays(7);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ((Deadline)overdueTask).setDate(newLocalDate);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return overdueTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Search for the task that user wants to find in the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param keyword The task that user is looking for."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Return the found task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ArrayList\u003cString\u003e findTargets(String keyword) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ArrayList\u003cString\u003e targets \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (this.getTask(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                targets.add(this.getTask(i).getTaskListInfo());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return targets;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 121
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * ToDo task which does not have detail date and time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ToDo (String description,String taskType){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param taskType Task type is todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param isDone Whether task is completed or not."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ToDo(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Return the information of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Information of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 40
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " * Interface with user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Displaying Pi logo and welcome message to user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void showLogo(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String logo \u003d \" ____  _      ,-.___,-.     \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|  _ \\\\|_|     \\\\_/_ _\\\\_/ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"| |_| | |       )O_O(      \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|  __/| |      { (_) }     \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|_|   |_|       `-^-\u0027      \\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Hello,\\n\" + logo + \"   I\u0027m Pi,\\n\" + \"   What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public static void showLine(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"   ________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Show error message if cannot load or be found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param message print error message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void showLoadingError(String message){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Read user command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return user command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * To print out all the tasks in list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks a list of saved tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        boolean haveOverdueTasks \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (tasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"Currently your list is empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++ ) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (tasks.getTask(i).getTaskType().equals(\"D\") \u0026\u0026 isOverdue(tasks.getTask(i))) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println((i + 1)+\". \"+tasks.getTask(i).getTaskListInfo() + \" **Overdue** \" );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                haveOverdueTasks \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println((i + 1) + \". \" + tasks.getTask(i).getTaskListInfo());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (haveOverdueTasks){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"You may postpone overdue deadline task by a week by using \u0027snooze\u0027, \" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    \"please follow the format: snooze task number.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *To check whether deadline tasks are overdue."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param overdueTask Overdue task in task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Return as true if task is overdue, or return false."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public boolean isOverdue(Task overdueTask) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (overdueTask instanceof Deadline) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            ((Deadline)overdueTask).getDate();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String oldDateFormatted \u003d ((Deadline)overdueTask).getDate();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate taskDeadlineDate \u003d LocalDate.parse(oldDateFormatted, formatter);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if ( taskDeadlineDate.isBefore(java.time.LocalDate.now())){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print a message to user when task is successfully removed."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param removedTaskIndex the task that user wants to remove by index."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printDeleteMessage(TaskList tasks, int removedTaskIndex) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\" \" + tasks.getTask(removedTaskIndex).getTaskListInfo());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print a message to user when task is successfully mark as done."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param finishedTaskIndex task that user marks as done by index."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printDoneMessage(TaskList tasks, int finishedTaskIndex) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(finishedTaskIndex).getTaskListInfo());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print a message to user that number of tasks in the list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printUpdateMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print a list to user when task is found, or no task is found in the list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param results found tasks in the list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printFoundKeyword(ArrayList\u003cTask\u003e results) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (results.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"   ☹ OOPS!!!, No record found!\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (results.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println((i + 1) + \". \" + results.get(i).getTaskListInfo());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print a message to user when task is successfully added."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printAddMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(tasks.size() - 1).getTaskListInfo());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print exception message when DukeException is thrown."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param exception exception message."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printExceptionMessage(DukeException exception) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(exception);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print goodbye message when user exits."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print message to user when task is successfully postponed."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param tasks the task is snoozed."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void snooze(Task tasks) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Postpone 7 days: \" + tasks.getTaskListInfo());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Print a list to user when task is found, or no task is found in the list."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param results Found tasks in the list."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printTargets(ArrayList\u003cString\u003e results) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (results.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"   ☹ OOPS!!!, No record found!\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 1; i \u003c results.size() + 1; i++) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(i + \". \" + results.get(i - 1));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 211
    }
  },
  {
    "path": "src/test/java/DoWithinPeriodTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.DoWithinPeriod;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class DoWithinPeriodTaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void doWithinPeriodTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String description \u003d \"To collect ticket\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String fromDate \u003d (\"2020-12-01\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localFromDate \u003d LocalDate.parse(fromDate);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String toDate \u003d (\"2020-12-07\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localToDate \u003d LocalDate.parse(toDate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        DoWithinPeriod collectionDoWithinPeriod \u003d new DoWithinPeriod(description,\"P\",localFromDate,localToDate,false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(\"[P][\\u2718] To collect ticket between Dec 1 2020 and Dec 7 2020\",collectionDoWithinPeriod.getTaskListInfo());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void getDescription_withoutDescription_exceptionThrow() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Parser parser \u003d new Parser(\"event\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            parser.getDescription();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        });"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void getDescription_withDescription_success() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Parser parser \u003d new Parser(\"event happy new year /at 2020-12-31 23:59\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String description \u003d \"happy new year\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Assertions.assertEquals(description, parser.getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 25
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void taskList () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ToDo todoTravelling \u003d new ToDo(\"Travelling\",\"T\", false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        tasks.addTask(todoTravelling);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(1, tasks.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(todoTravelling, tasks.getTask(0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 16
    }
  },
  {
    "path": "src/test/java/ToDoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class ToDoTaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void toDoTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ToDo todoTravelling \u003d new ToDo(\"Travelling\",\"T\", false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ToDo todoRunning \u003d new ToDo(\"Running\",\"T\", false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ToDo todoPlaySoccer \u003d new ToDo(\"Play Soccer\",\"T\", false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(\"[T][\\u2718] Travelling\",todoTravelling.getTaskListInfo());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(\"[T][\\u2718] Running\",todoRunning.getTaskListInfo());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(\"[T][\\u2718] Play Soccer\",todoPlaySoccer.getTaskListInfo());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void isDoneTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ToDo todoPainting \u003d new ToDo(\"Painting\", \"T\", false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        todoPainting.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        assertEquals(\"[T][\\u2713] Painting\", todoPainting.getTaskListInfo());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 25
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "T|X|buy book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "E|X|dinner|Oct 1 2020|12:12"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "D|Y|submit report|Dec 12 2020|23:59"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "P|X|book collection|Dec 1 2020|Dec 7 2020"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "deadline return book /by june 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo join football club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo cooking"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 12
    }
  }
]
