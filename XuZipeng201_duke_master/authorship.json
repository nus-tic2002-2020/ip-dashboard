[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    //private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo() + \" by \" + this.getDate() + \" \" + this.getTiming();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //return \"[D]\" + super.getTaskListInfo() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.formatForFile() + \"|\" + this.getDate() + \"|\" + this.getTiming();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (!(e instanceof NoSuchFileException)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.showLoadingError(\"File not found or unable to load the tasks\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.showLogo();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (parser.getUserCommand().equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.printList(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                int finishedTask \u003d parser.getTaskIndex();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.getTask(finishedTask - 1).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.printDoneMessage(tasks, finishedTask - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    storage.updateFile(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                int removedTask \u003d parser.getTaskIndex();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.printDeleteMessage(tasks, removedTask - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.deletedTask(removedTask - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                ui.printUpdateMessage(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                //System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    storage.updateFile(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (parser.getUserCommand().contains(\"find\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    //this.findTask(parser);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    String keyword \u003d parser.getDescription();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    //ArrayList\u003cString\u003e targets \u003d tasks.findTargets(keyword);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.find(keyword);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                //String findKeyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                //tasks.findTask(findKeyword);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    this.addTask(parser);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    ui.printUpdateMessage(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    //System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    } catch (IOException exception) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(exception);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * Add different tasks to the list"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @param parser To get the user\u0027s input"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws DukeException To show the error message when detect the wrong input or missing input"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void addTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (parser.getUserCommand().equals(\"todo\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String toDo \u003d parser.getDescription();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.addTask(new ToDo(toDo, \"T\", false));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else if (parser.getUserCommand().equals(\"event\") || parser.getUserCommand().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate date \u003d parser.getDate();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalTime timing \u003d parser.getTime();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (parser.getUserCommand().equals(\"event\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.addTask(new Event(description, \"E\", date, timing, false));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.addTask(new Deadline(description, \"D\", date, timing, false));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else if (parser.getUserCommand().equals(\"doWithinPeriod\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate fromDate \u003d parser.getFromDate();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate toDate \u003d parser.getToDate();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.addTask(new doWithinPeriod(description, \"P\", fromDate, toDate, false));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.printAddMessage(tasks);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 146,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public DukeException(String x){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        message \u003d x;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String exceptionMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if ((message.equals(\"event\"))"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                || (message.equals(\"deadline\"))"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                || (message.equals(\"todo\"))){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            exceptionMessage \u003d \"  ☹ OOPS!!! The description of a \" + message + \" cannot be empty.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }else if((message.endsWith(\"/at\")) || (message.endsWith(\"/by\"))){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            exceptionMessage \u003d \"  ☹ OOPS!!! Please input a timing for this task\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            exceptionMessage \u003d \"  ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return exceptionMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    //private String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo() + \" at \" + this.getDate() + \" \" + this.getTiming();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //return \"[E]\" + super.getTaskListInfo() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.formatForFile() + \"|\" + this.getDate() + \"|\" + this.getTiming();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 42
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return inputs[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public int getTaskIndex() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return Integer.valueOf(inputs[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDescription() throws DukeException{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            //ui.showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! The description of a \" + inputs[0] + \" cannot be empty!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String description \u003d inputs[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int dateIndex \u003d this.getDateIndex();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 2; i \u003c dateIndex; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            description \u003d description.concat(\" \" + inputs[i]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public int getDateIndex() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int i \u003d 2;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (i !\u003d inputs.length \u0026\u0026 inputs[i].charAt(0) !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalDate getDate() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int dateIndex \u003d this.getDateIndex() + 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (dateIndex \u003d\u003d (inputs.length + 1) || dateIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(\"  ☹ OOPS!!! Please input a timing for this task. \" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    \"Please follow the format: yyyy-mm-dd HH:mm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(inputs[dateIndex]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalDate getToDate() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String toDate \u003d inputs[inputs.length-1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localToDate \u003d LocalDate.parse(toDate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return localToDate;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalDate getFromDate() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String fromDate \u003d inputs[inputs.length-2];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalDate localFromDate \u003d LocalDate.parse(fromDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return localFromDate;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public LocalTime getTime() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        int timeIndex \u003d this.getDateIndex() + 2;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        LocalTime timing \u003d LocalTime.parse(inputs[timeIndex]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 84
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        FileWriter writer \u003d new FileWriter(\"tasks.txt\",false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            writer.write(tasks.getTask(0).formatForFile());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                writer.write(System.lineSeparator() + tasks.getTask(i).formatForFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * To load the saved tasks in the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @return Displays the tasks that are saved previously in the text file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     * @throws FileNotFoundException To show error message when file could not be found"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile () throws FileNotFoundException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        File file \u003d new File (\"tasks.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Scanner readFile \u003d new Scanner (file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String fileInput \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String inputs[] \u003d fileInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskType \u003d inputs[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String isDone \u003d inputs[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d inputs[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            switch (taskType){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    String eventDate \u003d inputs[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    String eventTime \u003d inputs[4];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    LocalDate localDate \u003d LocalDate.parse(eventDate, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    LocalTime localTime \u003d LocalTime.parse(eventTime, formatter);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    if (isDone.equals(\"✘\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        tasks.add(new Event(description, taskType, localDate, localTime, false));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        tasks.add(new Event(description, taskType, localDate, localTime, true));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    String deadlineDate \u003d inputs[3];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    String deadlineTime \u003d inputs[4];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    LocalDate deadlineLocalDate \u003d LocalDate.parse(deadlineDate, deadlineFormatter);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    LocalTime deadlineLocalTime \u003d LocalTime.parse(deadlineTime, deadlineFormatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    if (isDone.equals(\"✘\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        tasks.add(new Deadline(description, taskType, deadlineLocalDate, deadlineLocalTime,false));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        tasks.add(new Deadline(description, taskType, deadlineLocalDate, deadlineLocalTime, true));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    if (isDone.equals(\"✘\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        tasks.add(new ToDo(description, taskType, false));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        tasks.add(new ToDo(description, taskType, true));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 101
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task(String description,String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return symbols (✓ : ✘)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"[\" + this.getTaskType() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return this.getTaskType() + \"|\" + this.getStatusIcon() + \"|\" + this.getDescription();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void deletedTask(int taskIndex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void find (String keyword) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                results.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ui.printFoundKeyword(results);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 46
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ToDo (String description,String taskType){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ToDo(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return super.getTaskListInfo();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /*public String formatForFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"T\" + super.formatForFile() + super.getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "*/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void showLogo(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String logo \u003d \" ____  _      ,-.___,-.     \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|  _ \\\\|_|     \\\\_/_ _\\\\_/ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"| |_| | |       )O_O(      \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|  __/| |      { (_) }     \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|_|   |_|       `-^-\u0027      \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Hello,\\n\" + logo + \"   I\u0027m Pi,\\n\" + \"   What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public static void showLine(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"   ________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void showLoadingError(String message){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (tasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"Currently your list is empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++ ) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println((i + 1) + \". \" + tasks.getTask(i).getTaskListInfo());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printDeleteMessage(TaskList tasks, int removedTaskIndex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\" \" + tasks.getTask(removedTaskIndex).getTaskListInfo());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printDoneMessage(TaskList tasks, int finishedTaskIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(finishedTaskIndex).getTaskListInfo());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printUpdateMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printFoundKeyword(ArrayList\u003cTask\u003e results) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (results.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"   ☹ OOPS!!!, No record found!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (results.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println((i + 1) + \". \" + results.get(i).getTaskListInfo());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printAddMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(tasks.size() - 1).getTaskListInfo());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printExceptionMessage(DukeException exception) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(exception);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 90
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "E|✘|New Year |Dec 31 2020|23:59"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "D|✘|exam is coming |Dec 1 2020|09:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "T|✓|study"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "E|✘|go to city |Oct 11 2000|12:10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "D|✓|closing |Jan 1 2000|01:10"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "T|✘|study math"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "E|✘|math test |Dec 12 2019|12:00"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "deadline return book /by june 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo join football club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo cooking"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 12
    }
  }
]
