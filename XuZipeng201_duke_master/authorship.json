[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    //private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"[D]\" + super.getTaskListInfo() + \" by \" + this.getDate() + \" \" + getTiming();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //return \"[D]\" + super.getTaskListInfo() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "/*    public String formatForFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"D\" + super.formatForFile() + super.getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";*/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        /* A greeting message */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String logo \u003d \" ____  _      ,-.___,-.     \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                     + \"|  _ \\\\|_|     \\\\_/_ _\\\\_/ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                     + \"| |_| | |       )O_O(      \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                     + \"|  __/| |      { (_) }     \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                     + \"|_|   |_|       `-^-\u0027      \\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Hello,\\n\" + logo + \"I\u0027m Pi,\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            loadFile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        input \u003d in.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String[] inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                int finishedTask \u003d Integer.valueOf(inputs[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.get(finishedTask - 1).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println(\" \" + tasks.get(finishedTask - 1).getTaskListInfo());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    updateFile(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                int removedTask \u003d Integer.valueOf(inputs[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println(\" \" + tasks.get(removedTask - 1).getTaskListInfo());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                tasks.remove(removedTask - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    updateFile(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    addTask(input, inputs, tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        updateFile(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    } catch (IOException exception) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                        System.out.println(\"☹ OOPS: \" + exception.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    System.out.println(exception);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "              input \u003d in.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public static void updateFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"tasks.txt\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            writer.write(tasks.get(0).getTaskListInfo());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            FileWriter appender \u003d new FileWriter(\"tasks.txt\", true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                appender.write(System.lineSeparator() + tasks.get(i).getTaskListInfo());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            appender.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public static void loadFile (ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        File file \u003d new File (\"tasks.txt\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Scanner readFile \u003d new Scanner (file);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String fileInput \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String inputs[] \u003d fileInput.split(\" \\\\| \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskType \u003d inputs[0];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String isDone \u003d inputs[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String description \u003d inputs[2];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            switch (taskType){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String eventDate \u003d inputs[3];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String eventTime \u003d inputs[4];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(eventDate, formatter);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                formatter \u003d DateTimeFormatter.ofPattern(\"hh:mm\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalTime localTime \u003d LocalTime.parse(eventTime, formatter);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"0\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Event(description, taskType, localDate, localTime, false));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Event(description, taskType, localDate, localTime, true));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String deadlineDate \u003d inputs[3];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String deadlineTime \u003d inputs[4];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalDate deadlineLocalDate \u003d LocalDate.parse(deadlineDate, deadlineFormatter);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                LocalTime deadlineLocalTime \u003d LocalTime.parse(deadlineTime, deadlineFormatter);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"0\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Deadline(description, taskType, deadlineLocalDate, deadlineLocalTime,false));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Deadline(description, taskType, deadlineLocalDate, deadlineLocalTime, true));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (isDone.equals(\"0\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new ToDo(description, taskType, false));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new ToDo(description, taskType, true));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            /*if (taskType.equals(\"D\") || taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                String dateAndTime \u003d inputs[3];"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Deadline(description, dateAndTime));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                    tasks.add(new Event(description, dateAndTime));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /*Add new Task*/"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public static void addTask(String userInput,String[] inputs, ArrayList\u003cTask\u003e tasks) throws DukeException{"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (inputs[0].startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (userInput.endsWith(\"/by\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if ((inputs.length \u003e 1) \u0026\u0026 (!userInput.contains(\"/by\"))) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            int findPosition \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskName \u003d userInput.substring(9, findPosition);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskTime \u003d userInput.substring(findPosition + 4, userInput.length());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String deadlineDate \u003d taskTime.substring(0, 10);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String deadlineTime \u003d taskTime.substring(11, 16);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(deadlineDate);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalTime timing \u003d LocalTime.parse(deadlineTime);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "//            if (taskTime.equals(\" \")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "//                throw new DukeException(\"  ☹ OOPS!!! Please input a timing for this task\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.add(new Deadline(taskName, \"D\", date, timing));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else if (inputs[0].startsWith(\"event\")) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (inputs.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if (userInput.endsWith(\"/at\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            } else if ((inputs.length \u003e 1) \u0026\u0026 (!userInput.contains(\"/at\"))) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            int findPosition \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskName \u003d userInput.substring(6, findPosition);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskTime \u003d userInput.substring(findPosition + 4, userInput.length());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String eventDate \u003d taskTime.substring(0, 10);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String eventTime \u003d taskTime.substring(11, 16);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(eventDate);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            LocalTime timing \u003d LocalTime.parse(eventTime);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.add(new Event(taskName, \"E\", date, timing));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else if (inputs[0].startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                throw new DukeException(userInput);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            String taskName \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            tasks.add(new ToDo(taskName,\"T\"));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            throw new DukeException(userInput);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"  \" + tasks.get(tasks.size() - 1).getTaskListInfo());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    /*print out the user input from the list*/"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if (tasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println(\"Currently your list is empty.\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++ ) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            System.out.println((i + 1) + \". \" + tasks.get(i).getTaskListInfo());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 258,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public DukeException(String x){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        message \u003d x;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        String exceptionMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        if ((message.equals(\"event\"))"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                || (message.equals(\"deadline\"))"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "                || (message.equals(\"todo\"))){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            exceptionMessage \u003d \"  ☹ OOPS!!! The description of a \" + message + \" cannot be empty.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }else if((message.endsWith(\"/at\")) || (message.endsWith(\"/by\"))){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            exceptionMessage \u003d \"  ☹ OOPS!!! Please input a timing for this task\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "            exceptionMessage \u003d \"  ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return exceptionMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    //private String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"[E]\" + super.getTaskListInfo() + \" at \" + this.getDate() + \" \" + getTiming();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //return \"[E]\" + super.getTaskListInfo() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "   /* public String formatForFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"E\" + super.formatForFile() + super.getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 42
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task(String description,String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public Task(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return symbols (✓ : ✘)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        Integer intIsDone \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \" | \" + intIsDone + \" | \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        //return \"|\" + this.getStatusIcon() + \"|\" + this.getDescription();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 47
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ToDo (String description,String taskType){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public ToDo(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String getTaskListInfo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"[T]\" + super.getTaskListInfo();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "        return \"T\" + super.formatForFile() + super.getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 19
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "[E][✓] new year  at Dec 31 2020 23:59"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "[T][✘] swimming"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "[D][✘] testing  by Jan 2 2020 12:00"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "deadline return book /by june 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo join football club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "todo cooking"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XuZipeng201"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "XuZipeng201": 12
    }
  }
]
