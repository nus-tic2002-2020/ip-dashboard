[
  {
    "path": "listData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "study math"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "study programming"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "walk the dog"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "programming quiz"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-01-01"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "math quiz"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2010-01-01"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "eat "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "@!212"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "(*@\u0026^!%@"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "a"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "buffet"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-01-01"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "drink tehbing"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-01-01"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "krav maga"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-01-01"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "softtess"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2021-01-01"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "return book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-11-08"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 52
    }
  },
  {
    "path": "src/main/java/main/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * class created to store deadline tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Deadline(String taskName, boolean taskDone, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.by \u003d LocalDate.parse(by, formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assert this.by.compareTo(LocalDate.now()) \u003e 0 : \"Deadline must not be before today\u0027s date.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Deadline() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to return input as a converted string output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * write deadline task into storage"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(\"D\\n\"); //to represent as todo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.write(storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(by + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to read deadline task from storage file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.read(fileRead);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String date \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.by \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 62
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * Trigger duke app to run"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //private static final String OUTPUT_DELIMITER \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //private static final String INPUT_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DukeApp application \u003d new DukeApp();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        application.run();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 13,
      "-": 2
    }
  },
  {
    "path": "src/main/java/main/DukeApp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class DukeApp {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //start the interaction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    UI ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    testDuke testDuke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public DukeApp() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * run the application"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList line \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.load(\"listData.txt\", line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //Junit testing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //testDuke.addOneTaskTest();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //if string doesn\u0027t equal to bye"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            input \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            parser.parseCommand(input, ui, line, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 34
    }
  },
  {
    "path": "src/main/java/main/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method for emptydescriptionexception to be called"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 12
    }
  },
  {
    "path": "src/main/java/main/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * class created to store event tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param at"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Event(String taskName, boolean taskDone, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.at \u003d LocalDate.parse(at, formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //to ensure that the event date is in the future"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assert this.at.compareTo(LocalDate.now()) \u003e 0 : \"Event must not be before today\u0027s date.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * constructor for recurring events"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Event(String taskName, boolean taskDone, LocalDate date) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        at \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Event() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to return input as a converted string output"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * write event task into storage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(\"E\\n\"); //to represent as todo"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.write(storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(at + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to read event task from storage file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String date \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.at \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 77
    }
  },
  {
    "path": "src/main/java/main/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * method for invalidcommandexception to be called"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 11
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to parse command into dukeapp"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void parseCommand(String input, UI ui, TaskList task, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            String[] arrValue \u003d input.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printTaskList(task.getCount(), task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a done cannot be empty\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                int index \u003d Integer.parseInt(arrValue[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                task.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printDone(task, index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String replaceString2 \u003d input.replace(\"event\", \"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String[] splitAt \u003d replaceString2.split(\" /every \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (splitAt.length \u003e 1)//if there is an every"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String recurringFrequency \u003d splitAt[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String replaceString \u003d input.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    task.newTodoTask(splitAt[0], false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                } else //if there isn\u0027t recurring"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String replaceString \u003d input.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    task.newTodoTask(replaceString, false);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printTodo(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String replaceString \u003d input.replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String[] splitBy \u003d replaceString.split(\" /by \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (splitBy.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The date of a event cannot be empty\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                LocalDate deadlineDate \u003d LocalDate.parse(splitBy[1], formatter);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                //Don\u0027t allow user to input date earlier than today\u0027s today"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(deadlineDate.isBefore(LocalDate.now())){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    System.out.println(\"Deadline must not be before today\u0027s date!!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    task.newDeadlineTask(splitBy[0], false, splitBy[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    ui.printDeadline(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a event cannot be empty\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String replaceString \u003d input.replace(\"event\", \"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String[] splitAt \u003d replaceString.split(\" /at \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (splitAt.length \u003c 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The date of a event cannot be empty\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String[] repeatChunk \u003d splitAt[1].split(\"/repeat\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                //compare"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(splitAt[1], formatter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                //Don\u0027t allow user to input date earlier than today\u0027s today"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(eventDate.isBefore(LocalDate.now())){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    System.out.println(\"Event must not be before today\u0027s date!!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                else"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (repeatChunk.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    if (replaceString.contains(\"/repeat\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        throw new EmptyDescriptionException(\"Oops. Please place the amount of days between each repeated event. e.g. /repeat\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    task.newEventTask(splitAt[0], false, splitAt[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    ui.printEvent(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String[] timesChunk \u003d repeatChunk[1].split(\"/times\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    if (timesChunk.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        throw new EmptyDescriptionException(\"Oops. Please place number of times event is to be repeated. e.g. /times\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String daysString \u003d timesChunk[0].trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    int days \u003d Integer.parseInt(daysString); // get number of days"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String timesString \u003d timesChunk[1].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    int times \u003d Integer.parseInt(timesString);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                   // DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(repeatChunk[0].trim(), formatter);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    for (int i \u003d 0; i \u003c times; i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        task.newEventTask(splitAt[0], false, date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        date \u003d date.plusDays(days);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        ui.printEvent(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a delete cannot be empty\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                int index \u003d Integer.parseInt(arrValue[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                Task t \u003d task.removeTask(index);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printDelete(t, task.getCount() + 1, index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                TaskList results \u003d task.find(input.replace(\"find\", \"\").trim());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printTaskList(results.getCount(), results);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (!arrValue[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                throw new InvalidCommandException(\"Whoops!!!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            ui.printInvalidCommandMessage();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            ui.printDateTimeExceptionMessage();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            ui.printInvalidIndex();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 143
    }
  },
  {
    "path": "src/main/java/main/Serializable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public interface Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    void write(FileWriter storage) throws IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    void read(BufferedReader fileRead) throws IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 12
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to initalize storage saving"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param filename"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param serializable"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void save(String filename, Serializable serializable) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        FileWriter storage \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            storage \u003d new FileWriter(filename);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            serializable.write(storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.close(); //close filewriter"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to initialize loading the file in storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param filename"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param serializable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void load(String filename, Serializable serializable) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        BufferedReader r \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        File file \u003d new File(filename);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            r \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            serializable.read(r);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                r.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 56
    }
  },
  {
    "path": "src/main/java/main/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected boolean taskDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task(String taskName, boolean taskDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task(String taskName, boolean taskDone, String frequency) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get taskname variable"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to set task name"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get taskdone variable"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public boolean getTaskDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to set task done variable"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void setTaskDone(boolean taskDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to return input as a converted string output"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String s \u003d \"[\" + getStatusIcon() + \"] \" + taskName;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get status icon"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return task done"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return (taskDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to set task done to true"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        taskDone \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     *write tasks into storage"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(taskName + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        if (taskDone) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            storage.write(\"true\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            storage.write(\"false\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * read tasks in storage"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        taskName \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String done \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        taskDone \u003d done.equals(\"true\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to search keyword"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return taskName.contains(keyword);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 120
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * created class for task actions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //new arraylist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    ArrayList\u003cTask\u003e task \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    int count \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return task.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * create new task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param x"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void newTodoTask(String x, boolean done) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ToDo t \u003d new ToDo(x, done);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * create new deadline task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void newDeadlineTask(String name, boolean done, String by) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Deadline d \u003d new Deadline(name, false, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(d);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * create new event task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param at"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void newEventTask(String name, boolean done, String at) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Event e \u003d new Event(name, false, at);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * new event task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void newEventTask(String name, boolean done, LocalDate date) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Event e \u003d new Event(name, false, date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * remove task from task list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            //to ensure that the event date is in the future"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            assert index \u003e 0 : \"Cannot delete negative index\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            assert index \u003c\u003d count : \"Cannot choose a number more than number of tasks\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count--;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            return task.remove(index - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * add task list into storage"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        for (int i \u003d 0; i \u003c task.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            task.get(i).write(storage); //write entire task list to storage"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * read task list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String type \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.clear();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        while ((type \u003d fileRead.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ToDo t \u003d new ToDo();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                t.read(fileRead);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                task.add(t);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                Deadline d \u003d new Deadline();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                d.read(fileRead);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                task.add(d);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                Event e;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                e \u003d new Event();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                e.read(fileRead);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                task.add(e);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * find keyword in task list"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param keyword word that user wants to find"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(keyword);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList results \u003d new TaskList();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        for (int i \u003d 0; i \u003c task.size(); i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            if (task.get(i).contains(keyword)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                results.add(task.get(i));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 147
    }
  },
  {
    "path": "src/main/java/main/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * overloaded constructor from task name and task done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public ToDo(String taskName, boolean taskDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public ToDo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * converting todo task input into string format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * add task list into storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(\"T\\n\"); //to represent as todo"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.write(storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 41
    }
  },
  {
    "path": "src/main/java/main/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a new todo task, please input: todo \u003ctaskname\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To mark a task as completed, please input : done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a new deadline task, please input : deadline \u003ctaskname\u003e /by yyyy-mm-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a new event task, please input: event \u003ctaskname\u003e /at yyyy-mm-dd\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a recurring event task, please input: event \u003ctaskname\u003e /at yyyy-mm-dd /repeat \u003cno. of days in between\u003e /times \u003cno. of times\u003e\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To print out task list, please input: list \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To delete, please input: delete \u003ctask number\u003e e.g. delete 2\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printTaskList(int count, TaskList line) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            System.out.println(i + 1 + \". \" + line.get(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDone(TaskList line, int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t[\" + line.get(index - 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printTodo(TaskList line, int count) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t\" + line.get(count));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDeadline(TaskList line, int count) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t\" + line.get(count));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printEvent(TaskList line, int count) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t\" + line.get(count));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDelete(Task t, int count, int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count--;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printInvalidCommandMessage() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Oops sorry, I don\u0027t know what that means :( \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon !\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDateTimeExceptionMessage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"date not recognized. Please input in this format: yyyy-mm-dd \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printInvalidIndex(){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"It doesn\u0027t exist. Please enter a valid selection!!!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 103
    }
  },
  {
    "path": "src/main/java/main/testDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import static junit.framework.TestCase.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class testDuke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void addOneTaskTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ToDo t \u003d new ToDo(\"Walk the dog\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList task \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(t);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, task.getCount());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 16
    }
  },
  {
    "path": "things/colors.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Blue"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Pink"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Black"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Purple"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Orange"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 5
    }
  },
  {
    "path": "things/fruits.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Peach"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Melon"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Banananananaana"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Watermelon"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 4
    }
  },
  {
    "path": "things/shapes.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Circle"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Triangle"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 2
    }
  }
]
