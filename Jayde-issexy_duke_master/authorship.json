[
  {
    "path": "listData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "eat lunch"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "netflix"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "quiz12"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-01-1 00:00AM"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "quiz1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "true"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-01-1 11:00AM"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "drink water"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "bubble tea"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-11-21 18:00PM"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "eat fruits"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "buffet "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "quiz6"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-11-13 12:59PM"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "E"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "concert"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2021-06-1 06:00PM"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "11.12 sales"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-11-12 20:00PM"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "E"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "among us"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-11-14 07:00AM"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "exercise"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Run"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "quiz7"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-11-15 00:00AM"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "E"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "bbq"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-12-1 06:00AM"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Play game"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "D"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "run"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "true"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2020-12-1 00:00AM"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "T"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "watch Annabelle "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "E"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "diving"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "2021-01-2 10:10AM"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 71
    }
  },
  {
    "path": "src/main/java/main/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * class created to store deadline tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * constructor with by string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone whether the task is done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param by date and time of deadline task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Deadline (String taskName, boolean taskDone, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d hh:mma\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //to ensure that the event date is in the future"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assert this.by.compareTo(LocalDateTime.now()) \u003e 0 : \"Cannot put deadline in the past\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * constructor using LocalDateTime to parse in date"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone whether the task is done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param date date and time of deadline task in LocalDateTime format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Deadline (String taskName, boolean taskDone, LocalDateTime date) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        by \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Deadline() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to return input as a converted string output"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \"+ by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * write deadline task into storage"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(\"D\\n\"); //to represent as todo"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.write(storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d HH:mma\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(by.format(formatter) + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to read deadline task from storage file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.read(fileRead);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String date \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d HH:mma\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.by \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 75
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * Duke application allows users to create a task list and add tasks based on 3 categories:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * todo, deadline and event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * Users are also able make their event and deadline tasks recurring by adding more inputs to the back of the task input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * @param args"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //private static final String OUTPUT_DELIMITER \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //private static final String INPUT_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DukeApp application \u003d new DukeApp();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        application.run();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 17,
      "-": 2
    }
  },
  {
    "path": "src/main/java/main/DukeApp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class DukeApp {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    //start the interaction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    UI ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    testDuke testDuke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public DukeApp() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * run the application"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * run the application by calling the parser, UI and storage classes"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList task \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.load(\"listData.txt\", task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //System.out.println(\"debug\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //Junit testing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //testDuke.addOneTaskTest();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //if string doesn\u0027t equal to bye"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            input \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            //System.out.println(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            parser.parseCommand(input, ui, task, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 37
    }
  },
  {
    "path": "src/main/java/main/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method for emptydescriptionexception to be called"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * this exception is used when descriptions of tasks are empty"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 13
    }
  },
  {
    "path": "src/main/java/main/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * class created to store event tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * constructor to create event task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone whether the task is done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param at date and time of event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Event (String taskName, boolean taskDone, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d hh:mma\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        //to ensure that the event date is in the future"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assert this.at.compareTo(LocalDateTime.now()) \u003e 0 : \"Cannot put event in the past\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * constructor to create event task with date in LocalDateTime format being parsed in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone whether the task is done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param date date and time of event task in LocalDateTime format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        public Event (String taskName, boolean taskDone, LocalDateTime date) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d hh:mma\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        at \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Event() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to return input as a converted string output"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"); //changing to format"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \"+ at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * write event task into storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(\"E\\n\"); //to represent as todo"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.write(storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d hh:mma\"); //to format date to save file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(at.format(formatter) + \"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to read event task from storage file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.read(fileRead);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String date \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d hh:mma\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.at \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 76
    }
  },
  {
    "path": "src/main/java/main/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * method for invalidcommandexception to be called"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 11
    }
  },
  {
    "path": "src/main/java/main/MockStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class MockStorage extends Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock storage to save duke test tasks into mock task list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param filename"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param serializable"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void save(String filename, Serializable serializable) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock load method for duke test tasks to be loaded from mock tasklist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param filename"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param serializable"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void load(String filename, Serializable serializable) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 21
    }
  },
  {
    "path": "src/main/java/main/MockUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * mock UI class created to override main UI methods during testing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class MockUI extends UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock printDone method to ove ride main printDone method during testing"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDone(TaskList line, int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock printTodo method to over ride main printTodo method during testing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printTodo(TaskList line, int count) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock print Deadline method to over ride main printDeadline method during testing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDeadline(TaskList line, int count) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock printEvent method to over ride main printEvent method during testing"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printEvent(TaskList line, int count) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * mock printDelete method to over ride main print Delete method during testing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDelete(Task t, int count, int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 52
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to parse command into dukeapp"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to parse commands into dukeapp"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void parseCommand(String input, UI ui, TaskList task, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            String[] arrValue \u003d input.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printTaskList(task.getCount(), task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } else if (arrValue[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a done cannot be empty\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                int index \u003d Integer.parseInt(arrValue[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                task.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printDone(task, index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            else if (arrValue[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String replaceString \u003d input.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                task.newTodoTask(replaceString, false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printTodo(task, task.getCount()-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            else if (arrValue[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String replaceString \u003d input.replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String[] splitBy \u003d replaceString.split(\" /by \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                //Don\u0027t allow user to input date earlier than today\u0027s today"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mma\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                LocalDateTime deadlineDate \u003d LocalDateTime.parse(splitBy[1], formatter1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(deadlineDate.isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    System.out.println(\"Deadline must not be before today\u0027s date!!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    if (splitBy.length \u003c 2) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        throw new EmptyDescriptionException(\"Oops. The date of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String[] repeatChunk \u003d splitBy[1].split(\"/repeat\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    if (repeatChunk.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        if (replaceString.contains(\"/repeat\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            throw new EmptyDescriptionException(\"Oops. Please place the amount of days between each repeated event. e.g. /repeat 7\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        task.newDeadlineTask(splitBy[0], false, splitBy[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        ui.printDeadline(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        String[] timesChunk \u003d repeatChunk[1].split(\"/times\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        if (timesChunk.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            throw new EmptyDescriptionException(\"Oops. Please place number of times event is to be repeated. e.g. /times 7\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        String daysString \u003d timesChunk[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        int days \u003d Integer.parseInt(daysString); // get number of days"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        String timesString \u003d timesChunk[1].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        int times \u003d Integer.parseInt(timesString);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d HH:mma\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        LocalDateTime date \u003d LocalDateTime.parse(repeatChunk[0].trim(), formatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        for (int i \u003d 0; i \u003c times; i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            task.newDeadlineTask(splitBy[0], false, date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            date \u003d date.plusDays(days);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            ui.printDeadline(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            else if (arrValue[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a event cannot be empty\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String replaceString \u003d input.replace(\"event \", \"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                String [] splitAt \u003d replaceString.split(\" /at \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                //Don\u0027t allow user to input date earlier than today\u0027s today"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mma\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                LocalDateTime eventDate \u003d LocalDateTime.parse(splitAt[1], formatter1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(eventDate.isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    System.out.println(\"Event must not be before today\u0027s date!!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    if (splitAt.length \u003c 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        throw new EmptyDescriptionException(\"Oops. The date of a event cannot be empty\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    String[] repeatChunk \u003d splitAt[1].split(\"/repeat\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    if (repeatChunk.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        if (replaceString.contains(\"/repeat\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            throw new EmptyDescriptionException(\"Oops. Please place the amount of days between each repeated event. e.g. /repeat 7\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        task.newEventTask(splitAt[0], false, splitAt[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        ui.printEvent(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        String[] timesChunk \u003d repeatChunk[1].split(\"/times\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        if (timesChunk.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            throw new EmptyDescriptionException(\"Oops. Please place number of times event is to be repeated. e.g. /times 7\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        String daysString \u003d timesChunk[0].trim();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        int days \u003d Integer.parseInt(daysString); // get number of days"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        String timesString \u003d timesChunk[1].trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        int times \u003d Integer.parseInt(timesString);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d hh:mma\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        LocalDateTime date \u003d LocalDateTime.parse(repeatChunk[0].trim(), formatter);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        for (int i \u003d 0; i \u003c times; i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            task.newEventTask(splitAt[0], false, date);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            date \u003d date.plusDays(days);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                            ui.printEvent(task, task.getCount() - 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                        storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            else if (arrValue[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(arrValue.length \u003c 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    throw new EmptyDescriptionException(\"Oops. The description of a delete cannot be empty\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                int index \u003d Integer.parseInt(arrValue[1]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                Task t \u003d task.removeTask(index);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printDelete(t, task.getCount()+1, index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.save(\"listData.txt\", task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            else if (arrValue[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                TaskList results \u003d task.find(input.replace(\"find\", \"\").trim());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                ui.printTaskList(results.getCount(), results);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            else if(!arrValue[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                throw new InvalidCommandException(\"Invalid command\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            ui.printInvalidCommandMessage();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            ui.printDateTimeExceptionMessage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 155
    }
  },
  {
    "path": "src/main/java/main/Serializable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public interface Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * create write function so that task list is able to be saved into storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    void write(FileWriter storage) throws IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * create read function so that task list is able to be read from storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    void read(BufferedReader fileRead) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 22
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to initalize storage saving"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param filename"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param serializable"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void save(String filename, Serializable serializable) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        FileWriter storage \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            storage \u003d new FileWriter(filename);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            serializable.write(storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                storage.close(); //close filewriter"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to initialize loading the file in storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param filename"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param serializable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void load(String filename, Serializable serializable) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        BufferedReader r \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        File file \u003d new File(filename);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            r \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            serializable.read(r);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                r.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 56
    }
  },
  {
    "path": "src/main/java/main/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    protected boolean taskDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * deaful constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task(String taskName, boolean taskDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task(String taskName, boolean taskDone, String frequency) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get taskname variable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to set task name"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get taskdone variable"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public boolean getTaskDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to set task done variable"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void setTaskDone(boolean taskDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to return input as a converted string output"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String s \u003d \"[\" + getStatusIcon() + \"] \" + taskName;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get status icon"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return task done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return (taskDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to set task done to true"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        taskDone \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     *write tasks into storage"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(taskName + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        if (taskDone) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            storage.write(\"true\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            storage.write(\"false\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * read tasks in storage"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param fileRead"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        taskName \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String done \u003d fileRead.readLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        taskDone \u003d done.equals(\"true\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to search keyword"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return taskName.contains(keyword);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 126
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "/***"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " * created class for task actions"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class TaskList implements Serializable{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    ArrayList\u003cTask\u003e line \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    int count \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public Task get(int index)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return line.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        public void add(Task t)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.add(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * create new task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param x"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param x task name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param done whether task is done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void newTodoTask(String x, boolean done) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            ToDo t \u003d new ToDo(x, done);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * create new deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param name name of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param done whether the task is done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param by date and time of deadline task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void newDeadlineTask(String name, boolean done, String by) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            Deadline d \u003d new Deadline(name, false, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.add(d);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param name name of the task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param done whether the task is done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param date date and time of deadline task in LocalDateTime format"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void newDeadlineTask(String name, boolean done, LocalDateTime date) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            Deadline d \u003d new Deadline(name, false, date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.add(d);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count ++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * create new event task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param name name of the task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param done whether the task is done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param at date and time of event task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void newEventTask(String name, boolean done, String at) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            Event e \u003d new Event(name, false, at);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.add(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count ++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param name name of the task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param done whether the task is done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param date date and time of event task using LocalDateTime format"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void newEventTask(String name, boolean done, LocalDateTime date) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            Event e \u003d new Event(name, false, date);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.add(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count ++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * remove task from task list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param index"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @return"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public Task removeTask(int index) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            //to ensure that the event date is in the future"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            assert index \u003e 0 : \"Cannot delete negative index\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            assert index \u003c\u003d count:\"Cannot choose a number more than number of tasks\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            count --;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            return line.remove(index-1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * method to find keyword in task list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param keyword keyword to be searched through the whole task list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @return all tasks containing the keyword"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            System.out.println(keyword);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            TaskList results \u003d new TaskList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            for(int i\u003d 0; i\u003cline.size(); i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if(line.get(i).contains(keyword)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    results.add(line.get(i));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            return results;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * add task list into storage"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param storage"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @throws IOException"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            for(int i\u003d0; i\u003cline.size(); i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                line.get(i).write(storage); //write entire task list to storage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            /***"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * read task list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @param fileRead"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             * @throws IOException"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            public void read(BufferedReader fileRead) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            String type \u003d null;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            line.clear();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            while ((type \u003d fileRead.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    ToDo t \u003d new ToDo();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    t.read(fileRead);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    line.add(t);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    Deadline d \u003d new Deadline();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    d.read(fileRead);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    line.add(d);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    Event e;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    e \u003d new Event();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    e.read(fileRead);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    line.add(e);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 156
    }
  },
  {
    "path": "src/main/java/main/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * overloaded constructor from task name and task done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param taskDone"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public ToDo(String taskName, boolean taskDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super(taskName, taskDone); // calls the parent constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * default constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public ToDo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * converting todo task input into string format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * add task list into storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void write(FileWriter storage) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        storage.write(\"T\\n\"); //to represent as todo"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        super.write(storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 41
    }
  },
  {
    "path": "src/main/java/main/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * to print the welcome message when duke app is called"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "                + \"(づ｡◕‿‿◕｡)づ\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a new todo task, please input: todo \u003ctaskname\u003e\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To mark a task as done, please input : done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a new deadline task, please input : deadline \u003ctaskname\u003e /by yyyy-mm-dd  hh:mm\u003cAM/PM\u003e e.g. 2020-12-12 00:00AM\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a new event task, please input: event \u003ctaskname\u003e /at yyyy-mm-dd hh:mm\u003cAM/PM\u003e e.g. 2020-12-12 00:00AM\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a recurring event task, please input: event \u003ctaskname\u003e /at yyyy-mm-dd hh:mm\u003cAM/PM\u003e e.g. 2020-12-12 00:00AM /repeat \u003cno. of days in between\u003e /times \u003cno. of times\u003e\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To add a recurring deadline task, please input: deadline \u003ctaskname\u003e /by yyyy-mm-dd hh:mm\u003cAM/PM\u003e e.g. 2020-12-12 00:00AM /repeat \u003cno. of days in between\u003e /times \u003cno. of times\u003e\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To print out task list, please input: list \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"To delete, please input: delete \u003ctask number\u003e e.g. delete 1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Please enter user input:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to print the task list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count number of tasks in list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line number of lines in list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printTaskList(int count, TaskList line) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "            System.out.println(i + 1 + \". \" + line.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     *method to print a new to do task after they have been created by user"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param index is the count of number of tasks in list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line number of lines in list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDone(TaskList line, int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t[\" + line.get(index - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     *method to print a new to do task after they have been created by user"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count number of tasks in list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line number of lines in list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printTodo(TaskList line, int count) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t\" + line.get(count));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     *method to print a new deadline task after they have been created by user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count number of tasks in list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line number of lines in list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDeadline(TaskList line, int count) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t\" + line.get(count));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     *method to print a new event task after they have been created by user"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count number of tasks in list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param line number of lines in list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printEvent(TaskList line, int count) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"\\t\" + line.get(count));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to delete task from task list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param t task to delete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param count number of tasks in list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @param index number of line of task to be deleted"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDelete(Task t, int count, int index) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        count--;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"_______________________________________________\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to print invalidCommandMessage exceptions"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printInvalidCommandMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Oops sorry, I don\u0027t know what that means :( \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to print ending message when application is closed"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon !\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to get user input"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * @return input made by user"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * method to print DateTimeException messages"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void printDateTimeExceptionMessage() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        System.out.println(\"date not recognized. Please input in this format: yyyy-mm-dd hh:mm\u003cAM/PM\u003e\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 151
    }
  },
  {
    "path": "src/main/java/main/testDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "import static junit.framework.TestCase.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "public class testDuke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * testing to add a todo task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void addOneTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        ToDo t \u003d new ToDo(\"Cut hair\", true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList task \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        task.add(t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, task.getCount());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * testing to add a todo task using parser"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void addOneTaskByParserTest(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        parser.parseCommand(\"todo HIIT\", new MockUI(), list, new MockStorage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, list.getCount());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(list.get(0).getTaskName(), \"read HIIT\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * testing to add a deadline task using parser"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void addOneDeadlineTaskByParserTest() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        parser.parseCommand(\"deadline read books /by 2020-11-15 11:30PM\", new MockUI(), list, new MockStorage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, list.getCount());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(list.get(0).getTaskName(), \"read books\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String expectedDate \u003d \"Nov 17 2020 11:40 PM\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Task firstTask \u003d list.line.get(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String[] line \u003d firstTask.toString().replace(\"(\", \"\").replace(\")\", \"\").split(\"by: \"); // get date from task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(line[1], expectedDate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * testing to add one event task using parser"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void addOneEventTaskByParserTest(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        parser.parseCommand(\"event picnic /at 2020-11-24 11:30AM\", new MockUI(), list, new MockStorage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, list.getCount());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(\"project meeting\", list.get(0).getTaskName());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String expectedDate \u003d \"Nov 24 2020 11:30 AM\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Task firstTask \u003d list.line.get(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        String[] line \u003d firstTask.toString().replace(\"(\", \"\").replace(\")\", \"\").split(\"at: \"); // get date from task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(expectedDate, line[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * testing to set a task to done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void taskDoneByParserTest(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Task task \u003d new Task(\"HIIT\", false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, list.getCount());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        parser.parseCommand(\"done 1\", new MockUI(), list, new MockStorage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(true, list.get(0).getTaskDone());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     * testing to delete a task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    public void deleteTaskByParser(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        Task task \u003d new Task(\"HIIT\", false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(1, list.getCount());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        parser.parseCommand(\"delete 1\", new MockUI(), list, new MockStorage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "        assertEquals(0, list.getCount());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 92
    }
  },
  {
    "path": "things/colors.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Blue"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Pink"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Black"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Purple"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Orange"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 5
    }
  },
  {
    "path": "things/fruits.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Peach"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Melon"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Banananananaana"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Watermelon"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 4
    }
  },
  {
    "path": "things/shapes.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Circle"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jayde-issexy"
        },
        "content": "Triangle"
      }
    ],
    "authorContributionMap": {
      "Jayde-issexy": 2
    }
  }
]
