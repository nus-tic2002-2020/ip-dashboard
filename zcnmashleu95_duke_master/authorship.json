[
  {
    "path": "data/tasks_list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Exceptions - Probably could double check more, Add more JUnit Testing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Nice to Have: AddTask(Check for copies),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Level 9 Individual Feature 1 and 2, Coding Standard and Coding Quality"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Better Search - e.g., find items even if the keyword matches the item only partially."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Snooze - Provide a way to easily snooze/postpone/reschedule tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Maybe JavaFX?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: JAssertion"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Used to create a new Duke Instance. Initialise the ui,storage and tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * tasks will load from the storage. If there is an error, it will initialise on its own."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param filePath The String filePath to storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException, IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Duke(String filePath) throws DukeException, IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Used to keep the Duke Chat bot running. Scan for input then Parse the input into a command"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Afterwards, execute the command. The process will keep running until the user types \"bye\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printIntro();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                String input \u003d ui.scanForInput();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                isRunning \u003d c.isRunning();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        new Duke(\"data/tasks_list.txt\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "zcnmashleu95": 75
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the AddCommand class which adds a specific task to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String taskSecondPart;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for the AddCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param type This indicates the type or subclass of Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describes the activity of the Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param secPart This is mainly for deadlines or events whereby they have a /at or /by. The time or location."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public AddCommand(String type, String description, String secPart){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.taskType \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.taskDescription \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.taskSecondPart \u003d secPart;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the AddCommand. It will add the Task to the TaskList by calling the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * addToList method."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException When the taskType is not a Task or its subclasses."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(taskType,taskDescription,taskSecondPart);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                System.lineSeparator() + tasks.get(size - 1).toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printTotalTasks();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 50
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This is the abstract parent Command Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected static boolean running \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the abstract method for execute."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This method is an accessor. It returns the boolean value of running."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return running This indicates if Duke is to continue to run or not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public boolean isRunning(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.running;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 35
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the command to delete a specific task from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    int option \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *This is the constructor for the DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param option This indicates the Task that the user wants to delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public DeleteCommand(int option){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the DeleteCommand. It will call the deleteFromList method."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks.deleteFromList(option -1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"Input option for Delete invalid.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 38
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the done command. It is used to change the task from the task list to its"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * done \"state\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private int option \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor of the DoneCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param option indicates the Task option that the user wants to change"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public DoneCommand(int option){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the DoneCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException when option is not within the range of 1 and TaskList Size"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(option \u003c\u003d tasks.getSize() \u0026\u0026 option \u003e\u003d 1){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks.get(option - 1).changeDoneTo(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + tasks.get(option - 1).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"Option for Done Command invalid\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 42
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the exit command. It is used to change the running boolean to false."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Afterwards, during execution, it will write the tasks into the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for ExitCommand. It will change the running boolean to false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ExitCommand(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.running \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the execution of the ExitCommand. It will write the tasks from the TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * to the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Executing Exit Command: Saving Task List to storage\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Finished saving Task List to storage\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 36
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This is to represent the FindCommand. It is used to find the tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * that contains a specific keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the FindCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param keyword This keyword is to be used for the searching afterwards during execution"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public FindCommand(String keyword){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the FindCommand. It will call the findList method with the keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.findList(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 36
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the list command. It is meant for printing out a list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the ListCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ListCommand(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the ListCommand. It will call the printList method from the TaskList class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the list of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 30
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the DukeException, meant for exceptions that run in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * It will return the error message to the ui for it to be printed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param errorMessage This is the error message for the specific exception when caught."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor for the error message of the exception"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getErrorMessage(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 27
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package parser;//deals with making sense of the user command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the parser. It parses the input from the ui. Depending on the input,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * it will parse the respective command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String parsedInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.parsedInput \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String secPart \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int option \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String commandWord \u003d input.stripLeading().split(\" \")[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(input.equals(\"blah\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(input.strip().equals(\"\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! You did not enter any command\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        switch(commandWord){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                option \u003d Integer.parseInt(input.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new DoneCommand(option);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d input.replaceFirst(\"todo\", \"\").stripLeading();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                if(input.isEmpty() \u003d\u003d true) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a Todo cannot be empty.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"todo\", description, secPart);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secPart \u003d secPart.replaceFirst( \"/at\", \"\").stripLeading();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d input.substring(0,index - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d description.replaceFirst(\"event\", \"\").stripLeading();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"event\", description, secPart);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secPart \u003d secPart.replaceFirst( \"/by\", \"\").stripLeading();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d input.substring(0,index - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d description.replaceFirst(\"deadline\", \"\").stripLeading();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"deadline\", description, secPart);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                option \u003d Integer.parseInt(input.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new DeleteCommand(option);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                keyword \u003d input.replaceFirst( \"find\", \"\").stripLeading();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d input;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"task\", description, secPart);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 101
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the Files access. The various objects are used to access the file/directory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * location for either writing or reading on the file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private File directory;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //For reading files"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private FileReader fr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    ArrayList\u003cString[]\u003e parsedFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the Storage Class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param filePath This is the filePath of the text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(this.directory.isDirectory() \u003d\u003d false || this.directory.exists() \u003d\u003d false){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Directory \\\"data\\\" is not found, creating a new one\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.directory.mkdir();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(this.f.isFile() \u003d\u003d false || this.f.exists() \u003d\u003d false){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"File \\\"duke.text\\\" is not found, creating a new one\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.f.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a mutator. It writes the Task List details into a file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the list of tasks that the user has entered."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(size \u003d\u003d 0){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Task List is empty. Nothing to save.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String firstPart;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String secPart \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i ++){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            temp \u003d tasks.get(i).getClass().toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            switch(temp){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.Task\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"O | \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.ToDo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"T | \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.Deadline\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"D | \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d \" | \" + ((Deadline)tasks.get(i)).getBy();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.Event\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"E | \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d \" | \" + ((Event)tasks.get(i)).getAt();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    System.out.println(\"Can\u0027t get Class from Task List\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            done \u003d (tasks.get(i).getIsDone()) ? 1:0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            text \u003d firstPart + done + \" | \" + tasks.get(i).getDescription() + secPart;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            fw.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            text \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            secPart \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a mutator that loads the task lists from the file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * It will return a list of tasks in form of an ArrayList of Strings. These Strings will be used for"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * the initialisation of Task List"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return a list of tasks that are written as strings"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ArrayList\u003cString[]\u003e load() throws IOException{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.fr \u003dnew FileReader(this.f);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.br \u003d new BufferedReader(this.fr);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.parsedFile \u003d  new ArrayList\u003cString[]\u003e ();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        while((line \u003d this.br.readLine())!\u003dnull){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.parsedFile.add(line.split(\" \\\\| \") );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.fr.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.parsedFile;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 119
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents a Deadline Task. It has a LocalDateTime by object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The \"by\" object will represent the time which the Deadline is supposed to finish."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The local date time format is in \"YYYY"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for the Deadline class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describe the task for the deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param by This represents the date and time of the deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd MMM yyyy H:m:s\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.by \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Invalid Date Time set for /by. It will be set to the current \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    \"time. Format should be \\\"dd MMM yyyy H:m:s\\\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor of the \"by\" object which represents the date and time of the dateline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the dateline of the task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy H:m:s\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the Deadline to a String object for printing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the deadline written as a String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getBy() + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 50
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the Event Class. It includes a String at."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * at will represent the destination or \"time\" for the task. Anything that the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * wants to input for it."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for the Event Class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describes the activity of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param at This is indicates the location for the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a accessor for the object \"at\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the location of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the Event Object to a String for printing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the Event written as a String"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 38
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the Parent Class Task. It has a String for the description of the task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The boolean is meant to indicate if the task is done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The cumulatedTasksAdded is meant to count total number of tasks added throughout the session"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private static int cumulatedTasksAdded \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for a Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describes the activity of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        cumulatedTasksAdded++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This changes the isDone boolean to the parameter \"value\". Which is either true or false."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * If true, it means the task is comepleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param value This is the boolean value which indicates if the task is comepleted or not"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void changeDoneTo(boolean value){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d value;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor of the description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor of the isDone boolean."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return if the task is done or not"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the Task to a String for printing"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the Task in the form of a String"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(getIsDone() \u003d\u003d true){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            symbol \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            symbol \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return (\"[\"+ symbol + \"] \" + getDescription());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public int getCumulatedTasksAdded(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return cumulatedTasksAdded;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 77
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the Task List. It contains a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * It has operations to add, delete, find and print the tasks from the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor of the TaskList. It initialises the ArrayList for tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is another constructor of the TaskList. This constructor loads from"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * the storage file. It has been parsed to an ArrayList of strings for loading."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param parsedFile This is the ArrayList of Strings"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException This is thrown when the parsedFile does not follow the expected format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * for the class Type section."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public TaskList(ArrayList\u003cString[]\u003e parsedFile) throws DukeException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            size \u003d parsedFile.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(NullPointerException e){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Task List is loading empty storage\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i++){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            switch(parsedFile.get(i)[0]){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"O\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    this.tasks.add(new Task(parsedFile.get(i)[2]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    this.tasks.add(new ToDo(parsedFile.get(i)[2]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    this.tasks.add(new Deadline(parsedFile.get(i)[2], parsedFile.get(i)[3]  ));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    this.tasks.add(new Event(parsedFile.get(i)[2],parsedFile.get(i)[3]) );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: File did not show task format.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if(parsedFile.get(i)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                this.tasks.get(this.tasks.size()-1).changeDoneTo(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is used to get the size of the Task List."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return size of Task List"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This method returns the Task Object at the TaskList index"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param index Starts from 0 till (size - 1).  Meant to indicate the Task\u0027s index to return"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return Task at the specific index of the ArrayList"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //Maybe throw exception"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Task get(int index){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Delete the Task from Task List at the specific index."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param index tarts from 0 till (size - 1).  Meant to indicate the Task\u0027s index to delete."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //throws exceptions.DukeException"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void deleteFromList(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(index \u003c 0 || index \u003e\u003d tasks.size()){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is to add a Task to the Task List. The type of task will depend on the taskType parameter"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param taskType This is meant for the different task subclasses"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This is meant for the description/activity of the task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param secondPart This is meant for Deadlines and Events tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException This happens when the taskType is not one of the subclasses."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //TODO: Need to check for copies"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void addTask(String taskType, String description, String secondPart) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        //if(memo.contains(tasks.Task(input)) \u003d\u003d true){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        //System.out.println(\"Your task is already in the memory.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        //return;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        switch(taskType){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"task\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                this.tasks.add( new Task (description) );"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                this.tasks.add(new ToDo(description) );"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                this.tasks.add( new Event(description, secondPart) );"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                this.tasks.add(new Deadline(description, secondPart) );"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                throw new DukeException(\"Error: Incorrect Task Type in addToList Method\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is to find Tasks that contain the keyword from the Task List"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param keyword This is the keyword which the Task List will search for containing the keyword"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void findList(String keyword){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d this.tasks.size();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int total \u003d 0;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Tasks that contain the keyword \\\"\" + keyword + \"\\\":\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i ++){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if(this.tasks.get(i).toString().contains(keyword)){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                System.out.println(System.lineSeparator() + (total+1) + \".\" + this.tasks.get(i).toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *  This prints the Tasks in the Task List"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        size \u003d this.tasks.size();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(size \u003d\u003d 0){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + \"Task List is empty.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Task List:\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i ++){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + (i+1) + \".\" + this.tasks.get(i).toString());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the total number of tasks in the task list"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printTotalTasks(){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int total \u003d tasks.size();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String ending;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(total !\u003d 1){"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ending \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ending \u003d \" task in the list\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Now you have \" + total + ending);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 204
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the \"ToDo\" task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for ToDo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This is the description/activity of the ToDo itself."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the ToDo to a String that will be used for printing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return String This returns the ToDo in the form of a string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 28
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// deals with interactions with the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/** Represents the Ui. It is meant to scan for new input and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " *  print the various Strings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    Scanner scan;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for Ui. It initialises the scan and input objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.input \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the intro logo of Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printIntro(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String intro \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \" ____        _        \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the dashed line used to separate printed lines/sections."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"____________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the farewell message when the user types \"bye\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printBye(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the request message for input from user and scans for the input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the input scanned from user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String scanForInput(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"What can I do for you?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.scan.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Print the error passage that is in parameters."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param errorMessage This is the error message that is received."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void showError(String errorMessage){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the specific loading error when the Task List"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * did not load from storage."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Did not load Task List from File\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 83
    }
  },
  {
    "path": "test/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void getBy_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"20 Feb 2000 10:10:10\", new Deadline(\"running\", \"20 Feb 2000 10:10:10\").getBy());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testToString_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"[D][✗] running (by: 20 Feb 2000 10:10:10)\", new Deadline(\"running\", \"20 Feb 2000 10:10:10\").toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 17
    }
  },
  {
    "path": "test/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void getSize_success() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"todo\",\"running\",\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"task\",\"jumping\",\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"event\",\"hopping\", \"home\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"deadline\", \"walking\",\"02 Feb 2020 10:10:10\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(4, tasks.getSize());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void get() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void deleteFromList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void findList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void printList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void printTotalTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "happy"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "zcnmashleu95": 2
    }
  }
]
