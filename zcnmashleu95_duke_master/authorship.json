[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: CLEAN UP!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//TODO: Exceptions - Probably could double check more,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// Work on Individual Features more"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// Double check on assertions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// Individual Features:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "//Better Search - e.g., find items even if the keyword matches the item only partially."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// Snooze - Provide a way to easily snooze/postpone/reschedule tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// \u0027Do within a period\u0027 task - Provide support for managing tasks that need to be done within a certain period e.g., collect certificate between Jan 15 and 25th."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Used to create a new Duke Instance. Initialise the ui,storage and tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * tasks will load from the storage. If there is an error, it will initialise on its own."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param filePath The String filePath to storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Used to keep the Duke Chat bot running. Scan for input then Parse the input into a command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Afterwards, execute the command. The process will keep running until the user types \"bye\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printIntro();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                input \u003d ui.scanForInput();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                isRunning \u003d c.isRunning();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        new Duke(\"data/tasks_list.txt\").run();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "zcnmashleu95": 82
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the AddCommand class which adds a specific task to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String taskSecondPart;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for the AddCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param type        This indicates the type or subclass of Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describes the activity of the Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param secPart     This is mainly for deadlines or events whereby they have a /by or /at. The Date and Time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public AddCommand(String type, String description, String secPart) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.taskType \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.taskDescription \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.taskSecondPart \u003d secPart;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the AddCommand. It will add the Task to the TaskList by calling the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * addToList method."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException When the taskType is not a Task or its subclasses."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(taskType, taskDescription, taskSecondPart);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printMessage(System.lineSeparator() + \"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                System.lineSeparator() + tasks.get(size - 1).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printNumberOfTasks();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Adding a generic task: [description]\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Adding a ToDo task: todo [description]\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Adding a Deadline task: deadline [description] /by [Date and Time]\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Adding a Event task: event [description] /at [Date and Time] - [Time]\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getTaskSecondPart() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.taskSecondPart;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 68
    }
  },
  {
    "path": "src/main/java/commands/ChangeDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the change done command. It is used to change the task from the task list to its"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * done \"state\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ChangeDoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private int option \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor of the ChangeDoneCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param option indicates the Task option that the user wants to change"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ChangeDoneCommand(int option, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the DoneCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException when option is not within the range of 1 and TaskList Size"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            String doneLevel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks.get(option - 1).changeDoneTo(isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                doneLevel \u003d \" done:\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                doneLevel \u003d \" not done:\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ui.printMessage(System.lineSeparator() + \"Nice! I\u0027ve marked this task as\" + doneLevel +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    System.lineSeparator() + tasks.get(option - 1).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"Input option for ChangeDone Command invalid\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Changing a task to be done: done [option number]\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Changing a task to be undone: undone [option number]\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 61
    }
  },
  {
    "path": "src/main/java/commands/ClearListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ClearListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ClearListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.clearAllTasks();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Clearing the task list: /clear\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 23
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This is the abstract parent Command Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected static boolean running \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the abstract method for execute."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This method is an accessor. It returns the boolean value of running."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return running This indicates if Duke is to continue to run or not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public boolean isRunning() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.running;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 35
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the command to delete a specific task from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    int option \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param option This indicates the Task that the user wants to delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public DeleteCommand(int option) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the DeleteCommand. It will call the deleteTask method."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            tasks.deleteTask(option - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"Input option for Delete Command invalid.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Deleting a task from the list: delete [option number]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 44
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the exit command. It is used to change the running boolean to false."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Afterwards, during execution, it will write the tasks into the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for ExitCommand. It will change the running boolean to false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.running \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the execution of the ExitCommand. It will write the tasks from the TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * to the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assert (!running) : \"running should not be true at this stage. It should be false\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printMessage(\"Executing Exit Command: Saving Task List to storage\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printMessage(\"Finished saving Task List to storage\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"To close this application: bye\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 42
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This is to represent the FindCommand. It is used to find the tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * that contains a specific keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the FindCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param keyword This keyword is to be used for the searching afterwards during execution"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the FindCommand. It will call the findList method with the keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the Task List that contains the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.findList(keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"To find tasks in the list containing a keyword: find [keyword]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 41
    }
  },
  {
    "path": "src/main/java/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ui.printMessage(\"Inputs in commands:\\n[description] is a string that describes the task.\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"[Date and Time] refers to the input date. It goes by the format \\\"dd/MM/yyyy HH:mm:ss\\\". \" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"Eg. 02/12/20 10:10:10\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"[Date and Time] For Event Tasks, \\\"ss\\\" seconds are not needed. Eg. 23:59, just before midnight\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"[Time] refers to the Time format of \\\"HH:mm\\\" where they represent the hours and minutes\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"[option] refers to the option number. The option number for each task can be viewed when the tasks are printed\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \" as a list.(this can be seen by the command \\\"list\\\")\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"[keyword] refers to the phrase or word that you want to search for\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                \"The commands for the respective features are after the semi-colon\\\":\\\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        AddCommand.printHelp();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        RescheduleCommand.printHelp();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ChangeDoneCommand.printHelp();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        DeleteCommand.printHelp();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ClearListCommand.printHelp();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ExitCommand.printHelp();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        FindCommand.printHelp();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        ListCommand.printHelp();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 38
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the list command. It is meant for printing out a list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the ListCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This executes the ListCommand. It will call the printList method from the TaskList class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks   This is the list of Tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param ui      This is the ui, to be used for scanning and printing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param storage This is the storage, used to read and write over the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"To print the list of tasks: list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 35
    }
  },
  {
    "path": "src/main/java/commands/RescheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class RescheduleCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String newDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    int option \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public RescheduleCommand(int option, String newDateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.newDateTime \u003d newDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if (tasks.get(this.option - 1) instanceof Deadline) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ((Deadline) (tasks.get(this.option - 1))).rescheduleBy(this.newDateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.printMessage(\"Rescheduled Date time: \" + tasks.get(this.option - 1).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } else if (tasks.get(this.option - 1) instanceof Event) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ((Event) (tasks.get(this.option - 1))).rescheduleAt(this.newDateTime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                ui.printMessage(\"Rescheduled Date time: \" + tasks.get(this.option - 1).toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                throw new DukeException(\"Error: You did not reschedule on a Deadline or Event\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"Error: Input option for Reschedule command is invalid\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Reschedule a Deadline: reschedule [option number] /new [Date and time]\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Reschedule a Deadline: reschedule [option number] /new [Date and time] - [Time]\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 47
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the DukeException, meant for exceptions that run in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * It will return the error message to the ui for it to be printed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param errorMessage This is the error message for the specific exception when caught."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor for the error message of the exception"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 28
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package parser;//deals with making sense of the user command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the parser. It parses the input from the ui. Depending on the input,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * it will parse the respective command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Constructor for Parser"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This parses the input gotten from the ui. This method will parse and return the appropriate Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return Command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException When the input for option number in various Commands is not a number or when the input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *                       for Adding a new Task is incomplete."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String secPart \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int option \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String commandWord \u003d input.stripLeading().split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assert !(commandWord.equals(null)) : \"commandWord should not be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (input.equals(\"blah\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (input.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! You did not enter any command\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    option \u003d Integer.parseInt(input.replaceFirst(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: Invalid option number, your input is not a number\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new ChangeDoneCommand(option, true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"undone\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    option \u003d Integer.parseInt(input.replaceFirst(\"undone\", \"\").trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: Invalid option number, your input is not a number\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new ChangeDoneCommand(option, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"/clear\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new ClearListCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"/help\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d input.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"todo\", description, secPart);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d secPart.replaceFirst(\"/at\", \"\").trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    description \u003d input.substring(0, index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    description \u003d description.replaceFirst(\"event\", \"\").trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: Incomplete Command for Add Event\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"event\", description, secPart);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d secPart.replaceFirst(\"/by\", \"\").trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    description \u003d input.substring(0, index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    description \u003d description.replaceFirst(\"deadline\", \"\").trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: Incomplete Command for Add Deadline.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"deadline\", description, secPart);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    option \u003d Integer.parseInt(input.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: Invalid option number, your input is not a number\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new DeleteCommand(option);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                keyword \u003d input.replaceFirst(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"reschedule\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                index \u003d input.indexOf(\"/new\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secPart \u003d secPart.replaceFirst(\"/new\", \"\").trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    option \u003d Integer.parseInt"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                            (input.substring(0, index).replaceFirst(\"reschedule\", \"\").trim());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    throw new DukeException(\"Error: Invalid option number, your input is not a number\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new RescheduleCommand(option, secPart);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                description \u003d input;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return new AddCommand(\"task\", description, secPart);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 144
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the Files access. The various objects are used to access the file/directory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * location for either writing or reading on the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private File directory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //For reading files"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private FileReader fr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private ArrayList\u003cString[]\u003e parsedFile;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for the Storage Class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param filePath This is the filePath of the text file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (this.directory.isDirectory() \u003d\u003d false || this.directory.exists() \u003d\u003d false) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Directory \\\"data\\\" is not found, creating a new one\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.directory.mkdir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (this.f.isFile() \u003d\u003d false || this.f.exists() \u003d\u003d false) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"File \\\"duke.text\\\" is not found, creating a new one\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.f.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a mutator. It writes the Task List details into a file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param tasks This is the list of tasks that the user has entered."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Task List is empty. Nothing to save.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String firstPart;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String secPart \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            temp \u003d tasks.get(i).getClass().toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            switch (temp) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.Task\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"O | \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.ToDo\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"T | \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.Deadline\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"D | \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d \" | \" + ((Deadline) tasks.get(i)).getBy();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"class tasks.Event\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    firstPart \u003d \"E | \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    secPart \u003d \" | \" + ((Event) tasks.get(i)).getAt();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    System.out.println(\"Did not get Class from Task List:\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            done \u003d (tasks.get(i).getIsDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            text \u003d firstPart + done + \" | \" + tasks.get(i).getDescription() + secPart;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            fw.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            text \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            secPart \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a mutator that loads the task lists from the file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * It will return a list of tasks in form of an ArrayList of Strings. These Strings will be used for"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * the initialisation of TaskList"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return a list of tasks that are written as strings"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ArrayList\u003cString[]\u003e load() throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.fr \u003d new FileReader(this.f);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.br \u003d new BufferedReader(this.fr);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.parsedFile \u003d new ArrayList\u003cString[]\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        while ((line \u003d this.br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.parsedFile.add(line.split(\" \\\\| \"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.fr.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.parsedFile;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 123
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents a Deadline Task. It has a LocalDateTime by object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The \"by\" object will represent the time which the Deadline is supposed to finish."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The local date time format is in \"YYYY"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for the Deadline class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describe the task for the deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param by          This represents the date and time of the deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.by \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Invalid Date Time set for /by. It will be set to the current \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    \"time. Format should be \\\"dd/MM/yyyy HH:mm:ss\\\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor of the \"by\" object which represents the date and time of the dateline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the dateline of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void rescheduleBy(String by) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/M/yyyy HH:mm:ss\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.by \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Invalid Date Time set for /by. It will be set to the current \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    \"time. Format should be \\\"dd/MM/yyyy HH:mm:ss\\\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the Deadline to a String object for printing."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the deadline written as a String"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getBy() + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 65
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * This represents the Event Class. It includes a String at."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * at will represent the destination or \"time\" for the task. Anything that the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * wants to input for it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected LocalDateTime start;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected LocalTime end;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for the Event Class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describes the activity of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param at          This is indicates the time period for the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            index \u003d at.indexOf(\" - \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.end \u003d LocalTime.parse(at.substring(index).replace(\" - \", \"\").trim(), DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.start \u003d LocalDateTime.parse(at.substring(0, index).replaceFirst(\"/at\", \"\").trim(), DateTimeFormatter.ofPattern(\"dd/M/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.start \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.end \u003d LocalTime.now();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Invalid Date Time set for /at. It will be set to the current \" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    \"time. Format should be \\\"dd/MM/yyyy HH:mm - HH:mm\\\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a accessor for the object \"at\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the location of the event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.start.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")) + \" - \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + this.end.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the Event Object to a String for printing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the Event written as a String"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getAt() + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void rescheduleAt(String at) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            index \u003d at.indexOf(\" - \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.end \u003d LocalTime.parse(at.substring(index).replace(\" - \", \"\").trim(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.start \u003d LocalDateTime.parse(at.substring(0, index).replaceFirst(\"/at\", \"\").trim(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.start \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            this.end \u003d LocalTime.now();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Invalid Date Time set for /at. It will be set to the current \" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    \"time. Format should be \\\"dd/MM/yyyy HH:mm - HH:mm\\\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 75
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.nio.ByteBuffer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import static java.nio.charset.StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the Parent Class Task. It has a String for the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The boolean is meant to indicate if the task is done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * The cumulatedTasksAdded is meant to count total number of tasks added throughout the session"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected static int cumulatedTasksAdded \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is a constructor for a Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This describes the activity of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        cumulatedTasksAdded++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This changes the isDone boolean to the parameter \"value\". Which is either true or false."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * If true, it means the task is completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param isDone This is the boolean value which indicates if the task is completed or not"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void changeDoneTo(boolean isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor of the description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is an accessor of the isDone boolean."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return if the task is done or not"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the Task to a String for printing"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the Task in the form of a String"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            symbol \u003d \"+\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            symbol \u003d \"-\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return (\"[\" + symbol + \"] \" + getDescription());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public int getCumulatedTasksAdded() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return cumulatedTasksAdded;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 86
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the Task List. It contains a list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * It has operations to add, delete, find and print the tasks from the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor of the TaskList. It initialises the ArrayList for tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is another constructor of the TaskList. This constructor loads from"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * the storage file. It has been parsed to an ArrayList of strings for loading."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param parsedFile This is the ArrayList of Strings"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException This is thrown when the parsedFile does not follow the expected format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *                       for the class Type section."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public TaskList(ArrayList\u003cString[]\u003e parsedFile) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            size \u003d parsedFile.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Error: Null pointer from parsedFile in TaskList initialisation\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            switch (parsedFile.get(i)[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"O\" -\u003e this.tasks.add(new Task(parsedFile.get(i)[2]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"T\" -\u003e this.tasks.add(new ToDo(parsedFile.get(i)[2]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"D\" -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        this.tasks.add(new Deadline(parsedFile.get(i)[2],"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                                (LocalDateTime.parse(parsedFile.get(i)[3], DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\"))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                                        .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\")))));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        System.out.println(\"Timing for added deadline invalid,\" + \" using the time now\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        this.tasks.add(new Deadline(parsedFile.get(i)[2],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"))));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                case \"E\" -\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        int index;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        String at;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        String end;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        index \u003d parsedFile.get(i)[3].lastIndexOf(\" - \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        end \u003d parsedFile.get(i)[3].substring(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        at \u003d parsedFile.get(i)[3].substring(0, index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        this.tasks.add(new Event(parsedFile.get(i)[2], (LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))) + end));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        System.out.println(\"Timing for added event invalid,\" + \" using the time now\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                        this.tasks.add(new Event(parsedFile.get(i)[2],"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) + \" - \" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                                        LocalTime.now().format(DateTimeFormatter.ofPattern(\"HH:mm\"))));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                default -\u003e throw new DukeException(\"Error: File did not show task format.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if (parsedFile.get(i)[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                this.tasks.get(this.tasks.size() - 1).changeDoneTo(true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is used to get the size of the Task List."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return size of Task List"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This method returns the Task Object at the TaskList index"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param index Starts from 0 till (size - 1).  Meant to indicate the Task\u0027s index to return"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return Task at the specific index of the ArrayList"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //Maybe throw exception"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Delete the Task from Task List at the specific index."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param index tarts from 0 till (size - 1).  Meant to indicate the Task\u0027s index to delete."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void deleteTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is to add a Task to the Task List. The type of task will depend on the taskType parameter"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param taskType    This is meant for the different task subclasses"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This is meant for the description/activity of the task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param secondPart  This is meant for Deadlines and Events tasks."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @throws DukeException This happens when the taskType is not one of the subclasses."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void addTask(String taskType, String description, String secondPart) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"task\" -\u003e this.tasks.add(new Task(description));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"todo\" -\u003e this.tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"event\" -\u003e this.tasks.add(new Event(description, secondPart));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"deadline\" -\u003e this.tasks.add(new Deadline(description, secondPart));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            default -\u003e throw new DukeException(\"Error: Incorrect Task Type in addTask Method\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is to find Tasks that contain the keyword from the Task List"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param keyword This is the keyword which the Task List will search for containing the keyword"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void findList(String keyword) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d this.tasks.size();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int total \u003d 0;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String classType \u003d switch (keyword) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"Task\" -\u003e Task.class.toString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"ToDo\" -\u003e ToDo.class.toString();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"Deadline\" -\u003e Deadline.class.toString();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"Event\" -\u003e Event.class.toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            default -\u003e \"\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        };"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Tasks that contain the keyword \\\"\" + keyword + \"\\\":\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if (this.tasks.get(i).toString().contains(keyword) || classType.equals(this.tasks.get(i).getClass().toString())) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                total \u003d total + 1;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                System.out.println(System.lineSeparator() + (total) + \".\" + this.tasks.get(i).toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the Tasks in the Task List"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d this.tasks.size();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + \"Task List is empty.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Task List:\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + (i + 1) + \".\" + this.tasks.get(i).toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the total number of tasks in the task list"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printNumberOfTasks() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int total \u003d tasks.size();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String ending;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if (total !\u003d 1) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ending \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            ending \u003d \" task in the list\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Now you have \" + total + ending);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This clears all the tasks in the list."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void clearAllTasks() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 220
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the \"ToDo\" task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for ToDo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param description This is the description/activity of the ToDo itself."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This converts the ToDo to a String that will be used for printing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return String This returns the ToDo in the form of a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 29
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "// deals with interactions with the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * Represents the Ui. It is meant to scan for new input and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " * print the various Strings."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    Scanner scan;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This is the constructor for Ui. It initialises the scan and input objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.input \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the intro logo of Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String intro \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the dashed line used to separate printed lines/sections."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the farewell message when the user types \"bye\"."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the request message for input from user and scans for the input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @return the input scanned from user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String scanForInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"What can I do for you? For help, type \\\"/help\\\". \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.scan.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * Print the error passage that is in parameters."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * @param errorMessage This is the error message that is received."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * This prints the specific loading error when the Task List"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     * did not load from storage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Did not load Task List from Filepath\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printMessage(String message){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 84
    }
  },
  {
    "path": "test/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseListCommand() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"class commands.ListCommand\",parser.parse(\"list 123\").getClass().toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"task\" , ((AddCommand) parser.parse(\"list123\")).getTaskType());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"list123\" , ((AddCommand) parser.parse(\"list123\")).getTaskDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals( \"task\",((AddCommand) parser.parse(\"List\")).getTaskType());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals( \"List\",((AddCommand) parser.parse(\"List\")).getTaskDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseBlah(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            parser.parse(\"blah\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getErrorMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            assertEquals( \"task\", ((AddCommand) parser.parse(\"blah 123\")).getTaskType());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            assertEquals(\"blah 123\",((AddCommand) parser.parse(\"blah 123\")).getTaskDescription() );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            e.getErrorMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseEmptyString(){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            parser.parse(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            assertEquals(\"☹ OOPS!!! You did not enter any command\", e.getErrorMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            parser.parse(\"    \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            assertEquals(\"☹ OOPS!!! You did not enter any command\", e.getErrorMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseDelete() throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"class commands.DeleteCommand\", parser.parse(\"delete 2\").getClass().toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"class commands.AddCommand\", parser.parse(\"delete2\").getClass().toString() );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            parser.parse(\"delete -1\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            assertEquals(\"Input option for Delete invalid.\", e.getErrorMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseAddTask() throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"task\",((AddCommand) parser.parse(\"jumping\")).getTaskType());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"jumping\",((AddCommand) parser.parse(\"jumping\")).getTaskDescription());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseAddTodo() throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        AddCommand dummyAdd \u003d (AddCommand) parser.parse(\"todo running\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"todo\",dummyAdd.getTaskType());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"running\",dummyAdd.getTaskDescription());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseAddDeadline() throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        AddCommand dummyAdd \u003d (AddCommand) parser.parse(\"deadline jogging /by 02/01/2020 23:59:59\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"deadline\",dummyAdd.getTaskType());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"jogging\",dummyAdd.getTaskDescription());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"02/01/2020 23:59:59\",dummyAdd.getTaskSecondPart());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testParseAddEvent() throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        AddCommand dummyAdd \u003d (AddCommand) parser.parse(\"event dinner /at restaurant\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"event\",dummyAdd.getTaskType());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"dinner\",dummyAdd.getTaskDescription());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"restaurant\",dummyAdd.getTaskSecondPart());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 114
    }
  },
  {
    "path": "test/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testGetBy_success() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"20 Feb 2000 10:10:10\", new Deadline(\"running\", \"20/02/2000 10:10:10\").getBy());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void testToString_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(\"[D][✗] running (by: 20 Feb 2000 10:10:10)\", new Deadline(\"running\", \"20/02/2000 10:10:10\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 15
    }
  },
  {
    "path": "test/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    void getSize_success() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"todo\",\"running\",\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"task\",\"jumping\",\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"event\",\"hopping\", \"home\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        tasks.addTask(\"deadline\", \"walking\",\"02/02/2020 10:10:10\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        assertEquals(4, tasks.getSize());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 20
    }
  },
  {
    "path": "text-ui-test/data/tasks_list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "T | 0 | house chores"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "D | 0 | school homework | 18 Dec 2020 23:59:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "E | 0 | birthday dinner | 11 Dec 2020 19:30 - 23:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "D | 1 | essay | 24 Nov 2020 23:59:59"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "O | 0 | running"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "T | 0 | Write Deadlines for myself"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "/help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "jumping jacks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "todo house chores"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "deadline school homework /by 20/12/2020 10:10:10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "event birthday dinner /at 10/12/2020 18:30 – 22:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "deadline essay /by 24/11/2020 23:59:59"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "undone 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "running"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "reschedule 2 /new 18/12/2020 23:59:59"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "reschedule 3 /new 11/12/2020 19:30 - 23:00"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "todo Write Deadlines for myself"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find home"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find ho"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find Deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find Event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find ToDo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "find essay"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "if exist \\data del \\data"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "zcnmashleu95": 3
    }
  }
]
