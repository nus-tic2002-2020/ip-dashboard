[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static boolean containsInMemo(String value, Task[] memo){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d memo.length;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i ++){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if(memo[i].getDescription().equals(value)){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static Task[] command(String input, Task[] memo){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        switch(input){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                printMemo(memo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                System.out.println(System.lineSeparator() + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                if(input.contains(\"done\")){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    memo \u003d makeDone(input,memo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                if(input.contains(\"todo\")){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    memo \u003d addMemo(input, memo,2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                if(input.contains(\"event\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    memo \u003d addMemo(input, memo,3);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                if(input.contains(\"deadline\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    memo \u003d addMemo(input, memo,4);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                memo \u003d addMemo(input, memo,1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return memo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    //option 1 for Task, 2 for Todos, 3 for Events, 4 for Deadlines"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static Task[] addMemo(String input, Task[] memo, int option){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String secondPart;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int newSize \u003d memo.length + 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(containsInMemo(input, memo)){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Your task is already in the memory.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return memo;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        memo \u003d Arrays.copyOf(memo, newSize);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        switch(option){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                memo[newSize - 1] \u003d new Task(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                input \u003d input.replaceFirst(\"todo\", \"\").stripLeading();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                memo[newSize - 1] \u003d new ToDo(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secondPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secondPart \u003d secondPart.replaceFirst( \"/at\", \"\").stripLeading();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                input \u003d input.substring(0,index - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                input \u003d input.replaceFirst(\"event\", \"\").stripLeading();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                memo[newSize - 1] \u003d new Event(input, secondPart);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secondPart \u003d input.substring(index);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                secondPart \u003d secondPart.replaceFirst( \"/by\", \"\").stripLeading();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                input \u003d input.substring(0,index - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                input \u003d input.replaceFirst(\"deadline\", \"\").stripLeading();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                memo[newSize - 1] \u003d new Deadline(input, secondPart);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                System.lineSeparator() + memo[newSize - 1].toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        memo[newSize - 1].printTotalTasks();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return memo;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static void printMemo(Task[] memo){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int size \u003d memo.length;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(size \u003d\u003d 0){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + \"Task List is empty.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i ++){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + (i+1) + \".\" + memo[i].toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public static Task[] makeDone(String input, Task[] memo){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int option \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        option \u003d Integer.parseInt(input.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(option \u003c\u003d memo.length \u0026\u0026 option \u003e\u003d 1){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            memo[option - 1].changeCompletedTo(true);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + memo[option - 1].toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(\"Input Invalid\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return memo;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        Task[] memo \u003d new Task[0];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        int start \u003d 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        while(start \u003d\u003d 1){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            System.out.println(System.lineSeparator() + \"What can I do for you?\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            if(input.equals(\"bye\")){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "                start \u003d 0;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            memo \u003d command(input,memo);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "zcnmashleu95": 150
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void changeCompletedTo(boolean value){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        this.isDone \u003d value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        if(getIsDone() \u003d\u003d true){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            symbol \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "            symbol \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return (\"[\"+ symbol + \"] \" + getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public void printTotalTasks(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 40
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "happy"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zcnmashleu95": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zcnmashleu95"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "zcnmashleu95": 2
    }
  }
]
